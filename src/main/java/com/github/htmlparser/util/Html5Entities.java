/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.htmlparser.util;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.text.translate.EntityArrays;

public class Html5Entities {
    
    /**
     * HTML 5.0 character entities.
     */
    public static final Map<CharSequence, CharSequence> HTML50_EXTENDED_ESCAPE;
    static {
        final Map<CharSequence, CharSequence> initialMap = new HashMap<>();
        initialMap.put("\u200C", "&zwnj;");
        initialMap.put("\u200D", "&zwj;");
        initialMap.put("\uD835\uDCCF", "&zscr;");
        initialMap.put("\uD835\uDCB5", "&Zscr;");
        initialMap.put("\u2124", "&Zopf;");
        initialMap.put("\uD835\uDD6B", "&zopf;");
        initialMap.put("\u21DD", "&zigrarr;");
        initialMap.put("\u0436", "&zhcy;");
        initialMap.put("\u0416", "&ZHcy;");
        initialMap.put("\u2128", "&Zfr;");
        initialMap.put("\uD835\uDD37", "&zfr;");
        initialMap.put("\u03B6", "&zeta;");
        initialMap.put("\u0396", "&Zeta;");
        initialMap.put("\u200B", "&ZeroWidthSpace;");
        initialMap.put("\u2128", "&zeetrf;");
        initialMap.put("\u017C", "&zdot;");
        initialMap.put("\u017B", "&Zdot;");
        initialMap.put("\u0437", "&zcy;");
        initialMap.put("\u0417", "&Zcy;");
        initialMap.put("\u017E", "&zcaron;");
        initialMap.put("\u017D", "&Zcaron;");
        initialMap.put("\u017A", "&zacute;");
        initialMap.put("\u0179", "&Zacute;");
        initialMap.put("\u0178", "&Yuml;");
        initialMap.put("\u00FF", "&yuml");
        initialMap.put("\u00FF", "&yuml;");
        initialMap.put("\u044E", "&yucy;");
        initialMap.put("\u042E", "&YUcy;");
        initialMap.put("\uD835\uDCCE", "&yscr;");
        initialMap.put("\uD835\uDCB4", "&Yscr;");
        initialMap.put("\uD835\uDD6A", "&yopf;");
        initialMap.put("\uD835\uDD50", "&Yopf;");
        initialMap.put("\u0457", "&yicy;");
        initialMap.put("\u0407", "&YIcy;");
        initialMap.put("\uD835\uDD36", "&yfr;");
        initialMap.put("\uD835\uDD1C", "&Yfr;");
        initialMap.put("\u00A5", "&yen");
        initialMap.put("\u00A5", "&yen;");
        initialMap.put("\u044B", "&ycy;");
        initialMap.put("\u042B", "&Ycy;");
        initialMap.put("\u0177", "&ycirc;");
        initialMap.put("\u0176", "&Ycirc;");
        initialMap.put("\u044F", "&yacy;");
        initialMap.put("\u042F", "&YAcy;");
        initialMap.put("\u00FD", "&yacute");
        initialMap.put("\u00FD", "&yacute;");
        initialMap.put("\u00DD", "&Yacute");
        initialMap.put("\u00DD", "&Yacute;");
        initialMap.put("\u22C0", "&xwedge;");
        initialMap.put("\u22C1", "&xvee;");
        initialMap.put("\u25B3", "&xutri;");
        initialMap.put("\u2A04", "&xuplus;");
        initialMap.put("\u2A06", "&xsqcup;");
        initialMap.put("\uD835\uDCCD", "&xscr;");
        initialMap.put("\uD835\uDCB3", "&Xscr;");
        initialMap.put("\u27F9", "&xrArr;");
        initialMap.put("\u27F6", "&xrarr;");
        initialMap.put("\u2A02", "&xotime;");
        initialMap.put("\u2A01", "&xoplus;");
        initialMap.put("\uD835\uDD69", "&xopf;");
        initialMap.put("\uD835\uDD4F", "&Xopf;");
        initialMap.put("\u2A00", "&xodot;");
        initialMap.put("\u22FB", "&xnis;");
        initialMap.put("\u27FC", "&xmap;");
        initialMap.put("\u27F8", "&xlArr;");
        initialMap.put("\u27F5", "&xlarr;");
        initialMap.put("\u03BE", "&xi;");
        initialMap.put("\u039E", "&Xi;");
        initialMap.put("\u27FA", "&xhArr;");
        initialMap.put("\u27F7", "&xharr;");
        initialMap.put("\uD835\uDD35", "&xfr;");
        initialMap.put("\uD835\uDD1B", "&Xfr;");
        initialMap.put("\u25BD", "&xdtri;");
        initialMap.put("\u22C3", "&xcup;");
        initialMap.put("\u25EF", "&xcirc;");
        initialMap.put("\u22C2", "&xcap;");
        initialMap.put("\uD835\uDCCC", "&wscr;");
        initialMap.put("\uD835\uDCB2", "&Wscr;");
        initialMap.put("\u2240", "&wreath;");
        initialMap.put("\u2240", "&wr;");
        initialMap.put("\u2118", "&wp;");
        initialMap.put("\uD835\uDD68", "&wopf;");
        initialMap.put("\uD835\uDD4E", "&Wopf;");
        initialMap.put("\uD835\uDD34", "&wfr;");
        initialMap.put("\uD835\uDD1A", "&Wfr;");
        initialMap.put("\u2118", "&weierp;");
        initialMap.put("\u2259", "&wedgeq;");
        initialMap.put("\u22C0", "&Wedge;");
        initialMap.put("\u2227", "&wedge;");
        initialMap.put("\u2A5F", "&wedbar;");
        initialMap.put("\u0175", "&wcirc;");
        initialMap.put("\u0174", "&Wcirc;");
        initialMap.put("\u299A", "&vzigzag;");
        initialMap.put("\u22AA", "&Vvdash;");
        initialMap.put("\u228B\uFE00", "&vsupne;");
        initialMap.put("\u2ACC\uFE00", "&vsupnE;");
        initialMap.put("\u228A\uFE00", "&vsubne;");
        initialMap.put("\u2ACB\uFE00", "&vsubnE;");
        initialMap.put("\uD835\uDCCB", "&vscr;");
        initialMap.put("\uD835\uDCB1", "&Vscr;");
        initialMap.put("\u22B3", "&vrtri;");
        initialMap.put("\u221D", "&vprop;");
        initialMap.put("\uD835\uDD67", "&vopf;");
        initialMap.put("\uD835\uDD4D", "&Vopf;");
        initialMap.put("\u2283\u20D2", "&vnsup;");
        initialMap.put("\u2282\u20D2", "&vnsub;");
        initialMap.put("\u22B2", "&vltri;");
        initialMap.put("\uD835\uDD33", "&vfr;");
        initialMap.put("\uD835\uDD19", "&Vfr;");
        initialMap.put("\u200A", "&VeryThinSpace;");
        initialMap.put("\u2240", "&VerticalTilde;");
        initialMap.put("\u2758", "&VerticalSeparator;");
        initialMap.put("\u007C", "&VerticalLine;");
        initialMap.put("\u2223", "&VerticalBar;");
        initialMap.put("\u2016", "&Vert;");
        initialMap.put("\u007C", "&vert;");
        initialMap.put("\u2016", "&Verbar;");
        initialMap.put("\u007C", "&verbar;");
        initialMap.put("\u22EE", "&vellip;");
        initialMap.put("\u225A", "&veeeq;");
        initialMap.put("\u22C1", "&Vee;");
        initialMap.put("\u2228", "&vee;");
        initialMap.put("\u22BB", "&veebar;");
        initialMap.put("\u2AE6", "&Vdashl;");
        initialMap.put("\u22AB", "&VDash;");
        initialMap.put("\u22A9", "&Vdash;");
        initialMap.put("\u22A8", "&vDash;");
        initialMap.put("\u22A2", "&vdash;");
        initialMap.put("\u0432", "&vcy;");
        initialMap.put("\u0412", "&Vcy;");
        initialMap.put("\u2AE9", "&vBarv;");
        initialMap.put("\u2AEB", "&Vbar;");
        initialMap.put("\u2AE8", "&vBar;");
        initialMap.put("\u22B3", "&vartriangleright;");
        initialMap.put("\u22B2", "&vartriangleleft;");
        initialMap.put("\u03D1", "&vartheta;");
        initialMap.put("\u2ACC\uFE00", "&varsupsetneqq;");
        initialMap.put("\u228B\uFE00", "&varsupsetneq;");
        initialMap.put("\u2ACB\uFE00", "&varsubsetneqq;");
        initialMap.put("\u228A\uFE00", "&varsubsetneq;");
        initialMap.put("\u03C2", "&varsigma;");
        initialMap.put("\u03F1", "&varrho;");
        initialMap.put("\u21D5", "&vArr;");
        initialMap.put("\u2195", "&varr;");
        initialMap.put("\u221D", "&varpropto;");
        initialMap.put("\u03D6", "&varpi;");
        initialMap.put("\u03D5", "&varphi;");
        initialMap.put("\u2205", "&varnothing;");
        initialMap.put("\u03F0", "&varkappa;");
        initialMap.put("\u03F5", "&varepsilon;");
        initialMap.put("\u299C", "&vangrt;");
        initialMap.put("\u29A7", "&uwangle;");
        initialMap.put("\u00FC", "&uuml");
        initialMap.put("\u00FC", "&uuml;");
        initialMap.put("\u00DC", "&Uuml");
        initialMap.put("\u00DC", "&Uuml;");
        initialMap.put("\u21C8", "&uuarr;");
        initialMap.put("\u25B4", "&utrif;");
        initialMap.put("\u25B5", "&utri;");
        initialMap.put("\u0169", "&utilde;");
        initialMap.put("\u0168", "&Utilde;");
        initialMap.put("\u22F0", "&utdot;");
        initialMap.put("\uD835\uDCCA", "&uscr;");
        initialMap.put("\uD835\uDCB0", "&Uscr;");
        initialMap.put("\u25F9", "&urtri;");
        initialMap.put("\u016F", "&uring;");
        initialMap.put("\u016E", "&Uring;");
        initialMap.put("\u230E", "&urcrop;");
        initialMap.put("\u231D", "&urcorner;");
        initialMap.put("\u231D", "&urcorn;");
        initialMap.put("\u21C8", "&upuparrows;");
        initialMap.put("\u22A5", "&UpTee;");
        initialMap.put("\u21A5", "&UpTeeArrow;");
        initialMap.put("\u03C5", "&upsilon;");
        initialMap.put("\u03A5", "&Upsilon;");
        initialMap.put("\u03D2", "&upsih;");
        initialMap.put("\u03D2", "&Upsi;");
        initialMap.put("\u03C5", "&upsi;");
        initialMap.put("\u2197", "&UpperRightArrow;");
        initialMap.put("\u2196", "&UpperLeftArrow;");
        initialMap.put("\u228E", "&uplus;");
        initialMap.put("\u21BE", "&upharpoonright;");
        initialMap.put("\u21BF", "&upharpoonleft;");
        initialMap.put("\u296E", "&UpEquilibrium;");
        initialMap.put("\u21D5", "&Updownarrow;");
        initialMap.put("\u2195", "&UpDownArrow;");
        initialMap.put("\u2195", "&updownarrow;");
        initialMap.put("\u21C5", "&UpArrowDownArrow;");
        initialMap.put("\u21D1", "&Uparrow;");
        initialMap.put("\u2191", "&UpArrow;");
        initialMap.put("\u2191", "&uparrow;");
        initialMap.put("\u2912", "&UpArrowBar;");
        initialMap.put("\uD835\uDD66", "&uopf;");
        initialMap.put("\uD835\uDD4C", "&Uopf;");
        initialMap.put("\u0173", "&uogon;");
        initialMap.put("\u0172", "&Uogon;");
        initialMap.put("\u228E", "&UnionPlus;");
        initialMap.put("\u22C3", "&Union;");
        initialMap.put("\u23DD", "&UnderParenthesis;");
        initialMap.put("\u23B5", "&UnderBracket;");
        initialMap.put("\u23DF", "&UnderBrace;");
        initialMap.put("\u005F", "&UnderBar;");
        initialMap.put("\u00A8", "&uml");
        initialMap.put("\u00A8", "&uml;");
        initialMap.put("\u016B", "&umacr;");
        initialMap.put("\u016A", "&Umacr;");
        initialMap.put("\u25F8", "&ultri;");
        initialMap.put("\u230F", "&ulcrop;");
        initialMap.put("\u231C", "&ulcorner;");
        initialMap.put("\u231C", "&ulcorn;");
        initialMap.put("\u2580", "&uhblk;");
        initialMap.put("\u21BE", "&uharr;");
        initialMap.put("\u21BF", "&uharl;");
        initialMap.put("\u2963", "&uHar;");
        initialMap.put("\u00F9", "&ugrave");
        initialMap.put("\u00F9", "&ugrave;");
        initialMap.put("\u00D9", "&Ugrave");
        initialMap.put("\u00D9", "&Ugrave;");
        initialMap.put("\uD835\uDD32", "&ufr;");
        initialMap.put("\uD835\uDD18", "&Ufr;");
        initialMap.put("\u297E", "&ufisht;");
        initialMap.put("\u296E", "&udhar;");
        initialMap.put("\u0171", "&udblac;");
        initialMap.put("\u0170", "&Udblac;");
        initialMap.put("\u21C5", "&udarr;");
        initialMap.put("\u0443", "&ucy;");
        initialMap.put("\u0423", "&Ucy;");
        initialMap.put("\u00FB", "&ucirc");
        initialMap.put("\u00FB", "&ucirc;");
        initialMap.put("\u00DB", "&Ucirc");
        initialMap.put("\u00DB", "&Ucirc;");
        initialMap.put("\u016D", "&ubreve;");
        initialMap.put("\u016C", "&Ubreve;");
        initialMap.put("\u045E", "&ubrcy;");
        initialMap.put("\u040E", "&Ubrcy;");
        initialMap.put("\u2949", "&Uarrocir;");
        initialMap.put("\u21D1", "&uArr;");
        initialMap.put("\u219F", "&Uarr;");
        initialMap.put("\u2191", "&uarr;");
        initialMap.put("\u00FA", "&uacute");
        initialMap.put("\u00FA", "&uacute;");
        initialMap.put("\u00DA", "&Uacute");
        initialMap.put("\u00DA", "&Uacute;");
        initialMap.put("\u21A0", "&twoheadrightarrow;");
        initialMap.put("\u219E", "&twoheadleftarrow;");
        initialMap.put("\u226C", "&twixt;");
        initialMap.put("\u0167", "&tstrok;");
        initialMap.put("\u0166", "&Tstrok;");
        initialMap.put("\u045B", "&tshcy;");
        initialMap.put("\u040B", "&TSHcy;");
        initialMap.put("\u0446", "&tscy;");
        initialMap.put("\u0426", "&TScy;");
        initialMap.put("\uD835\uDCC9", "&tscr;");
        initialMap.put("\uD835\uDCAF", "&Tscr;");
        initialMap.put("\u23E2", "&trpezium;");
        initialMap.put("\u2A3B", "&tritime;");
        initialMap.put("\u29CD", "&trisb;");
        initialMap.put("\u2A39", "&triplus;");
        initialMap.put("\u20DB", "&TripleDot;");
        initialMap.put("\u2A3A", "&triminus;");
        initialMap.put("\u225C", "&trie;");
        initialMap.put("\u25EC", "&tridot;");
        initialMap.put("\u22B5", "&trianglerighteq;");
        initialMap.put("\u25B9", "&triangleright;");
        initialMap.put("\u225C", "&triangleq;");
        initialMap.put("\u22B4", "&trianglelefteq;");
        initialMap.put("\u25C3", "&triangleleft;");
        initialMap.put("\u25BF", "&triangledown;");
        initialMap.put("\u25B5", "&triangle;");
        initialMap.put("\u2122", "&TRADE;");
        initialMap.put("\u2122", "&trade;");
        initialMap.put("\u2034", "&tprime;");
        initialMap.put("\u2929", "&tosa;");
        initialMap.put("\u2ADA", "&topfork;");
        initialMap.put("\uD835\uDD65", "&topf;");
        initialMap.put("\uD835\uDD4B", "&Topf;");
        initialMap.put("\u22A4", "&top;");
        initialMap.put("\u2AF1", "&topcir;");
        initialMap.put("\u2336", "&topbot;");
        initialMap.put("\u2928", "&toea;");
        initialMap.put("\u222D", "&tint;");
        initialMap.put("\u2A30", "&timesd;");
        initialMap.put("\u00D7", "&times");
        initialMap.put("\u00D7", "&times;");
        initialMap.put("\u22A0", "&timesb;");
        initialMap.put("\u2A31", "&timesbar;");
        initialMap.put("\u2248", "&TildeTilde;");
        initialMap.put("\u2245", "&TildeFullEqual;");
        initialMap.put("\u2243", "&TildeEqual;");
        initialMap.put("\u223C", "&Tilde;");
        initialMap.put("\u02DC", "&tilde;");
        initialMap.put("\u00FE", "&thorn");
        initialMap.put("\u00FE", "&thorn;");
        initialMap.put("\u00DE", "&THORN");
        initialMap.put("\u00DE", "&THORN;");
        initialMap.put("\u223C", "&thksim;");
        initialMap.put("\u2248", "&thkap;");
        initialMap.put("\u2009", "&thinsp;");
        initialMap.put("\u2009", "&ThinSpace;");
        initialMap.put("\u205F\u200A", "&ThickSpace;");
        initialMap.put("\u223C", "&thicksim;");
        initialMap.put("\u2248", "&thickapprox;");
        initialMap.put("\u03D1", "&thetav;");
        initialMap.put("\u03D1", "&thetasym;");
        initialMap.put("\u03B8", "&theta;");
        initialMap.put("\u0398", "&Theta;");
        initialMap.put("\u2234", "&Therefore;");
        initialMap.put("\u2234", "&therefore;");
        initialMap.put("\u2234", "&there4;");
        initialMap.put("\uD835\uDD31", "&tfr;");
        initialMap.put("\uD835\uDD17", "&Tfr;");
        initialMap.put("\u2315", "&telrec;");
        initialMap.put("\u20DB", "&tdot;");
        initialMap.put("\u0442", "&tcy;");
        initialMap.put("\u0422", "&Tcy;");
        initialMap.put("\u0163", "&tcedil;");
        initialMap.put("\u0162", "&Tcedil;");
        initialMap.put("\u0165", "&tcaron;");
        initialMap.put("\u0164", "&Tcaron;");
        initialMap.put("\u23B4", "&tbrk;");
        initialMap.put("\u03C4", "&tau;");
        initialMap.put("\u03A4", "&Tau;");
        initialMap.put("\u2316", "&target;");
        initialMap.put("\u0009", "&Tab;");
        initialMap.put("\u00DF", "&szlig");
        initialMap.put("\u00DF", "&szlig;");
        initialMap.put("\u292A", "&swnwar;");
        initialMap.put("\u2199", "&swarrow;");
        initialMap.put("\u21D9", "&swArr;");
        initialMap.put("\u2199", "&swarr;");
        initialMap.put("\u2926", "&swarhk;");
        initialMap.put("\u2AD6", "&supsup;");
        initialMap.put("\u2AD4", "&supsub;");
        initialMap.put("\u2AC8", "&supsim;");
        initialMap.put("\u2ACC", "&supsetneqq;");
        initialMap.put("\u228B", "&supsetneq;");
        initialMap.put("\u2AC6", "&supseteqq;");
        initialMap.put("\u2287", "&supseteq;");
        initialMap.put("\u22D1", "&Supset;");
        initialMap.put("\u2283", "&supset;");
        initialMap.put("\u2AC0", "&supplus;");
        initialMap.put("\u228B", "&supne;");
        initialMap.put("\u2ACC", "&supnE;");
        initialMap.put("\u2AC2", "&supmult;");
        initialMap.put("\u297B", "&suplarr;");
        initialMap.put("\u2AD7", "&suphsub;");
        initialMap.put("\u27C9", "&suphsol;");
        initialMap.put("\u2287", "&SupersetEqual;");
        initialMap.put("\u2283", "&Superset;");
        initialMap.put("\u2AC4", "&supedot;");
        initialMap.put("\u2287", "&supe;");
        initialMap.put("\u2AC6", "&supE;");
        initialMap.put("\u2AD8", "&supdsub;");
        initialMap.put("\u2ABE", "&supdot;");
        initialMap.put("\u22D1", "&Sup;");
        initialMap.put("\u2283", "&sup;");
        initialMap.put("\u00B3", "&sup3");
        initialMap.put("\u00B3", "&sup3;");
        initialMap.put("\u00B2", "&sup2");
        initialMap.put("\u00B2", "&sup2;");
        initialMap.put("\u00B9", "&sup1");
        initialMap.put("\u00B9", "&sup1;");
        initialMap.put("\u266A", "&sung;");
        initialMap.put("\u2211", "&Sum;");
        initialMap.put("\u2211", "&sum;");
        initialMap.put("\u220B", "&SuchThat;");
        initialMap.put("\u227F", "&succsim;");
        initialMap.put("\u22E9", "&succnsim;");
        initialMap.put("\u2AB6", "&succneqq;");
        initialMap.put("\u2ABA", "&succnapprox;");
        initialMap.put("\u2AB0", "&succeq;");
        initialMap.put("\u227F", "&SucceedsTilde;");
        initialMap.put("\u227D", "&SucceedsSlantEqual;");
        initialMap.put("\u2AB0", "&SucceedsEqual;");
        initialMap.put("\u227B", "&Succeeds;");
        initialMap.put("\u227D", "&succcurlyeq;");
        initialMap.put("\u227B", "&succ;");
        initialMap.put("\u2AB8", "&succapprox;");
        initialMap.put("\u2AD3", "&subsup;");
        initialMap.put("\u2AD5", "&subsub;");
        initialMap.put("\u2AC7", "&subsim;");
        initialMap.put("\u2ACB", "&subsetneqq;");
        initialMap.put("\u228A", "&subsetneq;");
        initialMap.put("\u2286", "&SubsetEqual;");
        initialMap.put("\u2AC5", "&subseteqq;");
        initialMap.put("\u2286", "&subseteq;");
        initialMap.put("\u22D0", "&Subset;");
        initialMap.put("\u2282", "&subset;");
        initialMap.put("\u2979", "&subrarr;");
        initialMap.put("\u2ABF", "&subplus;");
        initialMap.put("\u228A", "&subne;");
        initialMap.put("\u2ACB", "&subnE;");
        initialMap.put("\u2AC1", "&submult;");
        initialMap.put("\u2AC3", "&subedot;");
        initialMap.put("\u2286", "&sube;");
        initialMap.put("\u2AC5", "&subE;");
        initialMap.put("\u2ABD", "&subdot;");
        initialMap.put("\u22D0", "&Sub;");
        initialMap.put("\u2282", "&sub;");
        initialMap.put("\u00AF", "&strns;");
        initialMap.put("\u03D5", "&straightphi;");
        initialMap.put("\u03F5", "&straightepsilon;");
        initialMap.put("\u2605", "&starf;");
        initialMap.put("\u2606", "&star;");
        initialMap.put("\u22C6", "&Star;");
        initialMap.put("\u22C6", "&sstarf;");
        initialMap.put("\u2323", "&ssmile;");
        initialMap.put("\u2216", "&ssetmn;");
        initialMap.put("\uD835\uDCC8", "&sscr;");
        initialMap.put("\uD835\uDCAE", "&Sscr;");
        initialMap.put("\u2192", "&srarr;");
        initialMap.put("\u25AA", "&squf;");
        initialMap.put("\u25A1", "&squ;");
        initialMap.put("\u25AA", "&squarf;");
        initialMap.put("\u2294", "&SquareUnion;");
        initialMap.put("\u2292", "&SquareSupersetEqual;");
        initialMap.put("\u2290", "&SquareSuperset;");
        initialMap.put("\u2291", "&SquareSubsetEqual;");
        initialMap.put("\u228F", "&SquareSubset;");
        initialMap.put("\u2293", "&SquareIntersection;");
        initialMap.put("\u25A1", "&Square;");
        initialMap.put("\u25A1", "&square;");
        initialMap.put("\u2292", "&sqsupseteq;");
        initialMap.put("\u2290", "&sqsupset;");
        initialMap.put("\u2292", "&sqsupe;");
        initialMap.put("\u2290", "&sqsup;");
        initialMap.put("\u2291", "&sqsubseteq;");
        initialMap.put("\u228F", "&sqsubset;");
        initialMap.put("\u2291", "&sqsube;");
        initialMap.put("\u228F", "&sqsub;");
        initialMap.put("\u221A", "&Sqrt;");
        initialMap.put("\u2294\uFE00", "&sqcups;");
        initialMap.put("\u2294", "&sqcup;");
        initialMap.put("\u2293\uFE00", "&sqcaps;");
        initialMap.put("\u2293", "&sqcap;");
        initialMap.put("\u2225", "&spar;");
        initialMap.put("\u2660", "&spadesuit;");
        initialMap.put("\u2660", "&spades;");
        initialMap.put("\uD835\uDD64", "&sopf;");
        initialMap.put("\uD835\uDD4A", "&Sopf;");
        initialMap.put("\u002F", "&sol;");
        initialMap.put("\u29C4", "&solb;");
        initialMap.put("\u233F", "&solbar;");
        initialMap.put("\u044C", "&softcy;");
        initialMap.put("\u042C", "&SOFTcy;");
        initialMap.put("\u2AAC\uFE00", "&smtes;");
        initialMap.put("\u2AAC", "&smte;");
        initialMap.put("\u2AAA", "&smt;");
        initialMap.put("\u2323", "&smile;");
        initialMap.put("\u2223", "&smid;");
        initialMap.put("\u29E4", "&smeparsl;");
        initialMap.put("\u2A33", "&smashp;");
        initialMap.put("\u2216", "&smallsetminus;");
        initialMap.put("\u2218", "&SmallCircle;");
        initialMap.put("\u2190", "&slarr;");
        initialMap.put("\u2972", "&simrarr;");
        initialMap.put("\u2A24", "&simplus;");
        initialMap.put("\u2246", "&simne;");
        initialMap.put("\u2A9F", "&simlE;");
        initialMap.put("\u2A9D", "&siml;");
        initialMap.put("\u2AA0", "&simgE;");
        initialMap.put("\u2A9E", "&simg;");
        initialMap.put("\u2243", "&simeq;");
        initialMap.put("\u2243", "&sime;");
        initialMap.put("\u2A6A", "&simdot;");
        initialMap.put("\u223C", "&sim;");
        initialMap.put("\u03C2", "&sigmav;");
        initialMap.put("\u03C2", "&sigmaf;");
        initialMap.put("\u03C3", "&sigma;");
        initialMap.put("\u03A3", "&Sigma;");
        initialMap.put("\u00AD", "&shy");
        initialMap.put("\u00AD", "&shy;");
        initialMap.put("\u2191", "&ShortUpArrow;");
        initialMap.put("\u2192", "&ShortRightArrow;");
        initialMap.put("\u2225", "&shortparallel;");
        initialMap.put("\u2223", "&shortmid;");
        initialMap.put("\u2190", "&ShortLeftArrow;");
        initialMap.put("\u2193", "&ShortDownArrow;");
        initialMap.put("\u0448", "&shcy;");
        initialMap.put("\u0428", "&SHcy;");
        initialMap.put("\u0449", "&shchcy;");
        initialMap.put("\u0429", "&SHCHcy;");
        initialMap.put("\u266F", "&sharp;");
        initialMap.put("\u2322", "&sfrown;");
        initialMap.put("\uD835\uDD30", "&sfr;");
        initialMap.put("\uD835\uDD16", "&Sfr;");
        initialMap.put("\u2736", "&sext;");
        initialMap.put("\u2216", "&setmn;");
        initialMap.put("\u2216", "&setminus;");
        initialMap.put("\u2929", "&seswar;");
        initialMap.put("\u003B", "&semi;");
        initialMap.put("\u00A7", "&sect");
        initialMap.put("\u00A7", "&sect;");
        initialMap.put("\u2198", "&searrow;");
        initialMap.put("\u21D8", "&seArr;");
        initialMap.put("\u2198", "&searr;");
        initialMap.put("\u2925", "&searhk;");
        initialMap.put("\u2A66", "&sdote;");
        initialMap.put("\u22C5", "&sdot;");
        initialMap.put("\u22A1", "&sdotb;");
        initialMap.put("\u0441", "&scy;");
        initialMap.put("\u0421", "&Scy;");
        initialMap.put("\u227F", "&scsim;");
        initialMap.put("\u2A13", "&scpolint;");
        initialMap.put("\u22E9", "&scnsim;");
        initialMap.put("\u2AB6", "&scnE;");
        initialMap.put("\u2ABA", "&scnap;");
        initialMap.put("\u015D", "&scirc;");
        initialMap.put("\u015C", "&Scirc;");
        initialMap.put("\u015F", "&scedil;");
        initialMap.put("\u015E", "&Scedil;");
        initialMap.put("\u2AB4", "&scE;");
        initialMap.put("\u2AB0", "&sce;");
        initialMap.put("\u227D", "&sccue;");
        initialMap.put("\u227B", "&sc;");
        initialMap.put("\u2ABC", "&Sc;");
        initialMap.put("\u0161", "&scaron;");
        initialMap.put("\u0160", "&Scaron;");
        initialMap.put("\u2AB8", "&scap;");
        initialMap.put("\u201A", "&sbquo;");
        initialMap.put("\u015B", "&sacute;");
        initialMap.put("\u015A", "&Sacute;");
        initialMap.put("\u211E", "&rx;");
        initialMap.put("\u2968", "&ruluhar;");
        initialMap.put("\u29F4", "&RuleDelayed;");
        initialMap.put("\u29CE", "&rtriltri;");
        initialMap.put("\u25B8", "&rtrif;");
        initialMap.put("\u22B5", "&rtrie;");
        initialMap.put("\u25B9", "&rtri;");
        initialMap.put("\u22CA", "&rtimes;");
        initialMap.put("\u22CC", "&rthree;");
        initialMap.put("\u2019", "&rsquor;");
        initialMap.put("\u2019", "&rsquo;");
        initialMap.put("\u005D", "&rsqb;");
        initialMap.put("\u21B1", "&Rsh;");
        initialMap.put("\u21B1", "&rsh;");
        initialMap.put("\u211B", "&Rscr;");
        initialMap.put("\uD835\uDCC7", "&rscr;");
        initialMap.put("\u203A", "&rsaquo;");
        initialMap.put("\u21DB", "&Rrightarrow;");
        initialMap.put("\u21C9", "&rrarr;");
        initialMap.put("\u2A12", "&rppolint;");
        initialMap.put("\u2994", "&rpargt;");
        initialMap.put("\u0029", "&rpar;");
        initialMap.put("\u2970", "&RoundImplies;");
        initialMap.put("\u2A35", "&rotimes;");
        initialMap.put("\u2A2E", "&roplus;");
        initialMap.put("\u211D", "&Ropf;");
        initialMap.put("\uD835\uDD63", "&ropf;");
        initialMap.put("\u2986", "&ropar;");
        initialMap.put("\u27E7", "&robrk;");
        initialMap.put("\u21FE", "&roarr;");
        initialMap.put("\u27ED", "&roang;");
        initialMap.put("\u2AEE", "&rnmid;");
        initialMap.put("\u23B1", "&rmoust;");
        initialMap.put("\u23B1", "&rmoustache;");
        initialMap.put("\u200F", "&rlm;");
        initialMap.put("\u21CC", "&rlhar;");
        initialMap.put("\u21C4", "&rlarr;");
        initialMap.put("\u2253", "&risingdotseq;");
        initialMap.put("\u02DA", "&ring;");
        initialMap.put("\u21C0", "&RightVector;");
        initialMap.put("\u2953", "&RightVectorBar;");
        initialMap.put("\u21BE", "&RightUpVector;");
        initialMap.put("\u2954", "&RightUpVectorBar;");
        initialMap.put("\u295C", "&RightUpTeeVector;");
        initialMap.put("\u294F", "&RightUpDownVector;");
        initialMap.put("\u22B5", "&RightTriangleEqual;");
        initialMap.put("\u22B3", "&RightTriangle;");
        initialMap.put("\u29D0", "&RightTriangleBar;");
        initialMap.put("\u22CC", "&rightthreetimes;");
        initialMap.put("\u295B", "&RightTeeVector;");
        initialMap.put("\u22A2", "&RightTee;");
        initialMap.put("\u21A6", "&RightTeeArrow;");
        initialMap.put("\u219D", "&rightsquigarrow;");
        initialMap.put("\u21C9", "&rightrightarrows;");
        initialMap.put("\u21CC", "&rightleftharpoons;");
        initialMap.put("\u21C4", "&rightleftarrows;");
        initialMap.put("\u21C0", "&rightharpoonup;");
        initialMap.put("\u21C1", "&rightharpoondown;");
        initialMap.put("\u230B", "&RightFloor;");
        initialMap.put("\u21C2", "&RightDownVector;");
        initialMap.put("\u2955", "&RightDownVectorBar;");
        initialMap.put("\u295D", "&RightDownTeeVector;");
        initialMap.put("\u27E7", "&RightDoubleBracket;");
        initialMap.put("\u2309", "&RightCeiling;");
        initialMap.put("\u21A3", "&rightarrowtail;");
        initialMap.put("\u21C4", "&RightArrowLeftArrow;");
        initialMap.put("\u21D2", "&Rightarrow;");
        initialMap.put("\u2192", "&RightArrow;");
        initialMap.put("\u2192", "&rightarrow;");
        initialMap.put("\u21E5", "&RightArrowBar;");
        initialMap.put("\u27E9", "&RightAngleBracket;");
        initialMap.put("\u03F1", "&rhov;");
        initialMap.put("\u03C1", "&rho;");
        initialMap.put("\u03A1", "&Rho;");
        initialMap.put("\u296C", "&rharul;");
        initialMap.put("\u21C0", "&rharu;");
        initialMap.put("\u21C1", "&rhard;");
        initialMap.put("\u2964", "&rHar;");
        initialMap.put("\u211C", "&Rfr;");
        initialMap.put("\uD835\uDD2F", "&rfr;");
        initialMap.put("\u230B", "&rfloor;");
        initialMap.put("\u297D", "&rfisht;");
        initialMap.put("\u296F", "&ReverseUpEquilibrium;");
        initialMap.put("\u21CB", "&ReverseEquilibrium;");
        initialMap.put("\u220B", "&ReverseElement;");
        initialMap.put("\u00AE", "&REG");
        initialMap.put("\u00AE", "&REG;");
        initialMap.put("\u00AE", "&reg");
        initialMap.put("\u00AE", "&reg;");
        initialMap.put("\u25AD", "&rect;");
        initialMap.put("\u211C", "&Re;");
        initialMap.put("\u211D", "&reals;");
        initialMap.put("\u211C", "&realpart;");
        initialMap.put("\u211B", "&realine;");
        initialMap.put("\u211C", "&real;");
        initialMap.put("\u21B3", "&rdsh;");
        initialMap.put("\u201D", "&rdquor;");
        initialMap.put("\u201D", "&rdquo;");
        initialMap.put("\u2969", "&rdldhar;");
        initialMap.put("\u2937", "&rdca;");
        initialMap.put("\u0440", "&rcy;");
        initialMap.put("\u0420", "&Rcy;");
        initialMap.put("\u007D", "&rcub;");
        initialMap.put("\u2309", "&rceil;");
        initialMap.put("\u0157", "&rcedil;");
        initialMap.put("\u0156", "&Rcedil;");
        initialMap.put("\u0159", "&rcaron;");
        initialMap.put("\u0158", "&Rcaron;");
        initialMap.put("\u2990", "&rbrkslu;");
        initialMap.put("\u298E", "&rbrksld;");
        initialMap.put("\u298C", "&rbrke;");
        initialMap.put("\u005D", "&rbrack;");
        initialMap.put("\u007D", "&rbrace;");
        initialMap.put("\u2773", "&rbbrk;");
        initialMap.put("\u2910", "&RBarr;");
        initialMap.put("\u290F", "&rBarr;");
        initialMap.put("\u290D", "&rbarr;");
        initialMap.put("\u211A", "&rationals;");
        initialMap.put("\u2236", "&ratio;");
        initialMap.put("\u291C", "&rAtail;");
        initialMap.put("\u291A", "&ratail;");
        initialMap.put("\u219D", "&rarrw;");
        initialMap.put("\u21A3", "&rarrtl;");
        initialMap.put("\u2916", "&Rarrtl;");
        initialMap.put("\u2974", "&rarrsim;");
        initialMap.put("\u2945", "&rarrpl;");
        initialMap.put("\u21AC", "&rarrlp;");
        initialMap.put("\u21AA", "&rarrhk;");
        initialMap.put("\u291E", "&rarrfs;");
        initialMap.put("\u21D2", "&rArr;");
        initialMap.put("\u21A0", "&Rarr;");
        initialMap.put("\u2192", "&rarr;");
        initialMap.put("\u2933", "&rarrc;");
        initialMap.put("\u2920", "&rarrbfs;");
        initialMap.put("\u21E5", "&rarrb;");
        initialMap.put("\u2975", "&rarrap;");
        initialMap.put("\u00BB", "&raquo");
        initialMap.put("\u00BB", "&raquo;");
        initialMap.put("\u27E9", "&rangle;");
        initialMap.put("\u29A5", "&range;");
        initialMap.put("\u2992", "&rangd;");
        initialMap.put("\u27EB", "&Rang;");
        initialMap.put("\u27E9", "&rang;");
        initialMap.put("\u29B3", "&raemptyv;");
        initialMap.put("\u221A", "&radic;");
        initialMap.put("\u0155", "&racute;");
        initialMap.put("\u0154", "&Racute;");
        initialMap.put("\u223D\u0331", "&race;");
        initialMap.put("\u21DB", "&rAarr;");
        initialMap.put("\"", "&QUOT");
        initialMap.put("\"", "&QUOT;");
        initialMap.put("\"", "&quot");
        initialMap.put("\"", "&quot;");
        initialMap.put("\u225F", "&questeq;");
        initialMap.put("\u003F", "&quest;");
        initialMap.put("\u2A16", "&quatint;");
        initialMap.put("\u210D", "&quaternions;");
        initialMap.put("\uD835\uDCC6", "&qscr;");
        initialMap.put("\uD835\uDCAC", "&Qscr;");
        initialMap.put("\u2057", "&qprime;");
        initialMap.put("\u211A", "&Qopf;");
        initialMap.put("\uD835\uDD62", "&qopf;");
        initialMap.put("\u2A0C", "&qint;");
        initialMap.put("\uD835\uDD2E", "&qfr;");
        initialMap.put("\uD835\uDD14", "&Qfr;");
        initialMap.put("\u2008", "&puncsp;");
        initialMap.put("\u03C8", "&psi;");
        initialMap.put("\u03A8", "&Psi;");
        initialMap.put("\uD835\uDCC5", "&pscr;");
        initialMap.put("\uD835\uDCAB", "&Pscr;");
        initialMap.put("\u22B0", "&prurel;");
        initialMap.put("\u227E", "&prsim;");
        initialMap.put("\u221D", "&propto;");
        initialMap.put("\u2237", "&Proportion;");
        initialMap.put("\u221D", "&Proportional;");
        initialMap.put("\u221D", "&prop;");
        initialMap.put("\u2313", "&profsurf;");
        initialMap.put("\u2312", "&profline;");
        initialMap.put("\u232E", "&profalar;");
        initialMap.put("\u220F", "&Product;");
        initialMap.put("\u220F", "&prod;");
        initialMap.put("\u22E8", "&prnsim;");
        initialMap.put("\u2AB5", "&prnE;");
        initialMap.put("\u2AB9", "&prnap;");
        initialMap.put("\u2119", "&primes;");
        initialMap.put("\u2033", "&Prime;");
        initialMap.put("\u2032", "&prime;");
        initialMap.put("\u227E", "&precsim;");
        initialMap.put("\u2AB3", "&prE;");
        initialMap.put("\u2AAF", "&pre;");
        initialMap.put("\u22E8", "&precnsim;");
        initialMap.put("\u2AB5", "&precneqq;");
        initialMap.put("\u2AB9", "&precnapprox;");
        initialMap.put("\u2AAF", "&preceq;");
        initialMap.put("\u227E", "&PrecedesTilde;");
        initialMap.put("\u227C", "&PrecedesSlantEqual;");
        initialMap.put("\u2AAF", "&PrecedesEqual;");
        initialMap.put("\u227A", "&Precedes;");
        initialMap.put("\u227C", "&preccurlyeq;");
        initialMap.put("\u227A", "&prec;");
        initialMap.put("\u2AB7", "&precapprox;");
        initialMap.put("\u227C", "&prcue;");
        initialMap.put("\u227A", "&pr;");
        initialMap.put("\u2ABB", "&Pr;");
        initialMap.put("\u2AB7", "&prap;");
        initialMap.put("\u00A3", "&pound");
        initialMap.put("\u00A3", "&pound;");
        initialMap.put("\u2119", "&Popf;");
        initialMap.put("\uD835\uDD61", "&popf;");
        initialMap.put("\u2A15", "&pointint;");
        initialMap.put("\u210C", "&Poincareplane;");
        initialMap.put("\u00B1", "&pm;");
        initialMap.put("\u2A27", "&plustwo;");
        initialMap.put("\u2A26", "&plussim;");
        initialMap.put("\u00B1", "&plusmn");
        initialMap.put("\u00B1", "&plusmn;");
        initialMap.put("\u00B1", "&PlusMinus;");
        initialMap.put("\u2A72", "&pluse;");
        initialMap.put("\u2A25", "&plusdu;");
        initialMap.put("\u2214", "&plusdo;");
        initialMap.put("\u002B", "&plus;");
        initialMap.put("\u2A22", "&pluscir;");
        initialMap.put("\u229E", "&plusb;");
        initialMap.put("\u2A23", "&plusacir;");
        initialMap.put("\u210F", "&plankv;");
        initialMap.put("\u210E", "&planckh;");
        initialMap.put("\u210F", "&planck;");
        initialMap.put("\u03D6", "&piv;");
        initialMap.put("\u22D4", "&pitchfork;");
        initialMap.put("\u03C0", "&pi;");
        initialMap.put("\u03A0", "&Pi;");
        initialMap.put("\u260E", "&phone;");
        initialMap.put("\u2133", "&phmmat;");
        initialMap.put("\u03D5", "&phiv;");
        initialMap.put("\u03C6", "&phi;");
        initialMap.put("\u03A6", "&Phi;");
        initialMap.put("\uD835\uDD2D", "&pfr;");
        initialMap.put("\uD835\uDD13", "&Pfr;");
        initialMap.put("\u2031", "&pertenk;");
        initialMap.put("\u22A5", "&perp;");
        initialMap.put("\u2030", "&permil;");
        initialMap.put("\u002E", "&period;");
        initialMap.put("\u0025", "&percnt;");
        initialMap.put("\u043F", "&pcy;");
        initialMap.put("\u041F", "&Pcy;");
        initialMap.put("\u2202", "&PartialD;");
        initialMap.put("\u2202", "&part;");
        initialMap.put("\u2AFD", "&parsl;");
        initialMap.put("\u2AF3", "&parsim;");
        initialMap.put("\u2225", "&par;");
        initialMap.put("\u2225", "&parallel;");
        initialMap.put("\u00B6", "&para");
        initialMap.put("\u00B6", "&para;");
        initialMap.put("\u23DC", "&OverParenthesis;");
        initialMap.put("\u23B4", "&OverBracket;");
        initialMap.put("\u23DE", "&OverBrace;");
        initialMap.put("\u203E", "&OverBar;");
        initialMap.put("\u233D", "&ovbar;");
        initialMap.put("\u00F6", "&ouml");
        initialMap.put("\u00F6", "&ouml;");
        initialMap.put("\u00D6", "&Ouml");
        initialMap.put("\u00D6", "&Ouml;");
        initialMap.put("\u2297", "&otimes;");
        initialMap.put("\u2A37", "&Otimes;");
        initialMap.put("\u2A36", "&otimesas;");
        initialMap.put("\u00F5", "&otilde");
        initialMap.put("\u00F5", "&otilde;");
        initialMap.put("\u00D5", "&Otilde");
        initialMap.put("\u00D5", "&Otilde;");
        initialMap.put("\u2298", "&osol;");
        initialMap.put("\u00F8", "&oslash");
        initialMap.put("\u00F8", "&oslash;");
        initialMap.put("\u00D8", "&Oslash");
        initialMap.put("\u00D8", "&Oslash;");
        initialMap.put("\u2134", "&oscr;");
        initialMap.put("\uD835\uDCAA", "&Oscr;");
        initialMap.put("\u24C8", "&oS;");
        initialMap.put("\u2A5B", "&orv;");
        initialMap.put("\u2A57", "&orslope;");
        initialMap.put("\u2A56", "&oror;");
        initialMap.put("\u22B6", "&origof;");
        initialMap.put("\u00BA", "&ordm");
        initialMap.put("\u00BA", "&ordm;");
        initialMap.put("\u00AA", "&ordf");
        initialMap.put("\u00AA", "&ordf;");
        initialMap.put("\u2134", "&orderof;");
        initialMap.put("\u2134", "&order;");
        initialMap.put("\u2A5D", "&ord;");
        initialMap.put("\u2228", "&or;");
        initialMap.put("\u2A54", "&Or;");
        initialMap.put("\u21BB", "&orarr;");
        initialMap.put("\u2295", "&oplus;");
        initialMap.put("\u29B9", "&operp;");
        initialMap.put("\u2018", "&OpenCurlyQuote;");
        initialMap.put("\u201C", "&OpenCurlyDoubleQuote;");
        initialMap.put("\u29B7", "&opar;");
        initialMap.put("\uD835\uDD60", "&oopf;");
        initialMap.put("\uD835\uDD46", "&Oopf;");
        initialMap.put("\u2296", "&ominus;");
        initialMap.put("\u29B6", "&omid;");
        initialMap.put("\u03BF", "&omicron;");
        initialMap.put("\u039F", "&Omicron;");
        initialMap.put("\u03C9", "&omega;");
        initialMap.put("\u03A9", "&Omega;");
        initialMap.put("\u014D", "&omacr;");
        initialMap.put("\u014C", "&Omacr;");
        initialMap.put("\u29C0", "&olt;");
        initialMap.put("\u203E", "&oline;");
        initialMap.put("\u29BB", "&olcross;");
        initialMap.put("\u29BE", "&olcir;");
        initialMap.put("\u21BA", "&olarr;");
        initialMap.put("\u222E", "&oint;");
        initialMap.put("\u03A9", "&ohm;");
        initialMap.put("\u29B5", "&ohbar;");
        initialMap.put("\u29C1", "&ogt;");
        initialMap.put("\u00F2", "&ograve");
        initialMap.put("\u00F2", "&ograve;");
        initialMap.put("\u00D2", "&Ograve");
        initialMap.put("\u00D2", "&Ograve;");
        initialMap.put("\u02DB", "&ogon;");
        initialMap.put("\uD835\uDD2C", "&ofr;");
        initialMap.put("\uD835\uDD12", "&Ofr;");
        initialMap.put("\u29BF", "&ofcir;");
        initialMap.put("\u0153", "&oelig;");
        initialMap.put("\u0152", "&OElig;");
        initialMap.put("\u29BC", "&odsold;");
        initialMap.put("\u2299", "&odot;");
        initialMap.put("\u2A38", "&odiv;");
        initialMap.put("\u0151", "&odblac;");
        initialMap.put("\u0150", "&Odblac;");
        initialMap.put("\u229D", "&odash;");
        initialMap.put("\u043E", "&ocy;");
        initialMap.put("\u041E", "&Ocy;");
        initialMap.put("\u229A", "&ocir;");
        initialMap.put("\u00F4", "&ocirc");
        initialMap.put("\u00F4", "&ocirc;");
        initialMap.put("\u00D4", "&Ocirc");
        initialMap.put("\u00D4", "&Ocirc;");
        initialMap.put("\u229B", "&oast;");
        initialMap.put("\u00F3", "&oacute");
        initialMap.put("\u00F3", "&oacute;");
        initialMap.put("\u00D3", "&Oacute");
        initialMap.put("\u00D3", "&Oacute;");
        initialMap.put("\u2927", "&nwnear;");
        initialMap.put("\u2196", "&nwarrow;");
        initialMap.put("\u21D6", "&nwArr;");
        initialMap.put("\u2196", "&nwarr;");
        initialMap.put("\u2923", "&nwarhk;");
        initialMap.put("\u223C\u20D2", "&nvsim;");
        initialMap.put("\u22B5\u20D2", "&nvrtrie;");
        initialMap.put("\u2903", "&nvrArr;");
        initialMap.put("\u22B4\u20D2", "&nvltrie;");
        initialMap.put("\u003C\u20D2", "&nvlt;");
        initialMap.put("\u2264\u20D2", "&nvle;");
        initialMap.put("\u2902", "&nvlArr;");
        initialMap.put("\u29DE", "&nvinfin;");
        initialMap.put("\u2904", "&nvHarr;");
        initialMap.put("\u003E\u20D2", "&nvgt;");
        initialMap.put("\u2265\u20D2", "&nvge;");
        initialMap.put("\u22AF", "&nVDash;");
        initialMap.put("\u22AE", "&nVdash;");
        initialMap.put("\u22AD", "&nvDash;");
        initialMap.put("\u22AC", "&nvdash;");
        initialMap.put("\u224D\u20D2", "&nvap;");
        initialMap.put("\u2007", "&numsp;");
        initialMap.put("\u2116", "&numero;");
        initialMap.put("\u0023", "&num;");
        initialMap.put("\u03BD", "&nu;");
        initialMap.put("\u039D", "&Nu;");
        initialMap.put("\u22ED", "&ntrianglerighteq;");
        initialMap.put("\u22EB", "&ntriangleright;");
        initialMap.put("\u22EC", "&ntrianglelefteq;");
        initialMap.put("\u22EA", "&ntriangleleft;");
        initialMap.put("\u2278", "&ntlg;");
        initialMap.put("\u00F1", "&ntilde");
        initialMap.put("\u00F1", "&ntilde;");
        initialMap.put("\u00D1", "&Ntilde");
        initialMap.put("\u00D1", "&Ntilde;");
        initialMap.put("\u2279", "&ntgl;");
        initialMap.put("\u2AC6\u0338", "&nsupseteqq;");
        initialMap.put("\u2289", "&nsupseteq;");
        initialMap.put("\u2283\u20D2", "&nsupset;");
        initialMap.put("\u2289", "&nsupe;");
        initialMap.put("\u2AC6\u0338", "&nsupE;");
        initialMap.put("\u2285", "&nsup;");
        initialMap.put("\u2AB0\u0338", "&nsucceq;");
        initialMap.put("\u2281", "&nsucc;");
        initialMap.put("\u2AC5\u0338", "&nsubseteqq;");
        initialMap.put("\u2288", "&nsubseteq;");
        initialMap.put("\u2282\u20D2", "&nsubset;");
        initialMap.put("\u2288", "&nsube;");
        initialMap.put("\u2AC5\u0338", "&nsubE;");
        initialMap.put("\u2284", "&nsub;");
        initialMap.put("\u22E3", "&nsqsupe;");
        initialMap.put("\u22E2", "&nsqsube;");
        initialMap.put("\u2226", "&nspar;");
        initialMap.put("\u2224", "&nsmid;");
        initialMap.put("\u2244", "&nsimeq;");
        initialMap.put("\u2244", "&nsime;");
        initialMap.put("\u2241", "&nsim;");
        initialMap.put("\u2226", "&nshortparallel;");
        initialMap.put("\u2224", "&nshortmid;");
        initialMap.put("\uD835\uDCC3", "&nscr;");
        initialMap.put("\uD835\uDCA9", "&Nscr;");
        initialMap.put("\u2AB0\u0338", "&nsce;");
        initialMap.put("\u22E1", "&nsccue;");
        initialMap.put("\u2281", "&nsc;");
        initialMap.put("\u22ED", "&nrtrie;");
        initialMap.put("\u22EB", "&nrtri;");
        initialMap.put("\u21CF", "&nRightarrow;");
        initialMap.put("\u219B", "&nrightarrow;");
        initialMap.put("\u219D\u0338", "&nrarrw;");
        initialMap.put("\u21CF", "&nrArr;");
        initialMap.put("\u219B", "&nrarr;");
        initialMap.put("\u2933\u0338", "&nrarrc;");
        initialMap.put("\u2AAF\u0338", "&npre;");
        initialMap.put("\u2AAF\u0338", "&npreceq;");
        initialMap.put("\u2280", "&nprec;");
        initialMap.put("\u22E0", "&nprcue;");
        initialMap.put("\u2280", "&npr;");
        initialMap.put("\u2A14", "&npolint;");
        initialMap.put("\u2202\u0338", "&npart;");
        initialMap.put("\u2AFD\u20E5", "&nparsl;");
        initialMap.put("\u2226", "&npar;");
        initialMap.put("\u2226", "&nparallel;");
        initialMap.put("\u2224", "&NotVerticalBar;");
        initialMap.put("\u2249", "&NotTildeTilde;");
        initialMap.put("\u2247", "&NotTildeFullEqual;");
        initialMap.put("\u2244", "&NotTildeEqual;");
        initialMap.put("\u2241", "&NotTilde;");
        initialMap.put("\u2289", "&NotSupersetEqual;");
        initialMap.put("\u2283\u20D2", "&NotSuperset;");
        initialMap.put("\u227F\u0338", "&NotSucceedsTilde;");
        initialMap.put("\u22E1", "&NotSucceedsSlantEqual;");
        initialMap.put("\u2AB0\u0338", "&NotSucceedsEqual;");
        initialMap.put("\u2281", "&NotSucceeds;");
        initialMap.put("\u2288", "&NotSubsetEqual;");
        initialMap.put("\u2282\u20D2", "&NotSubset;");
        initialMap.put("\u22E3", "&NotSquareSupersetEqual;");
        initialMap.put("\u2290\u0338", "&NotSquareSuperset;");
        initialMap.put("\u22E2", "&NotSquareSubsetEqual;");
        initialMap.put("\u228F\u0338", "&NotSquareSubset;");
        initialMap.put("\u22ED", "&NotRightTriangleEqual;");
        initialMap.put("\u22EB", "&NotRightTriangle;");
        initialMap.put("\u29D0\u0338", "&NotRightTriangleBar;");
        initialMap.put("\u220C", "&NotReverseElement;");
        initialMap.put("\u22E0", "&NotPrecedesSlantEqual;");
        initialMap.put("\u2AAF\u0338", "&NotPrecedesEqual;");
        initialMap.put("\u2280", "&NotPrecedes;");
        initialMap.put("\u22FD", "&notnivc;");
        initialMap.put("\u22FE", "&notnivb;");
        initialMap.put("\u220C", "&notniva;");
        initialMap.put("\u220C", "&notni;");
        initialMap.put("\u2AA1\u0338", "&NotNestedLessLess;");
        initialMap.put("\u2AA2\u0338", "&NotNestedGreaterGreater;");
        initialMap.put("\u2274", "&NotLessTilde;");
        initialMap.put("\u2A7D\u0338", "&NotLessSlantEqual;");
        initialMap.put("\u226A\u0338", "&NotLessLess;");
        initialMap.put("\u2278", "&NotLessGreater;");
        initialMap.put("\u2270", "&NotLessEqual;");
        initialMap.put("\u226E", "&NotLess;");
        initialMap.put("\u22EC", "&NotLeftTriangleEqual;");
        initialMap.put("\u22EA", "&NotLeftTriangle;");
        initialMap.put("\u29CF\u0338", "&NotLeftTriangleBar;");
        initialMap.put("\u22F6", "&notinvc;");
        initialMap.put("\u22F7", "&notinvb;");
        initialMap.put("\u2209", "&notinva;");
        initialMap.put("\u22F9\u0338", "&notinE;");
        initialMap.put("\u22F5\u0338", "&notindot;");
        initialMap.put("\u2209", "&notin;");
        initialMap.put("\u224F\u0338", "&NotHumpEqual;");
        initialMap.put("\u224E\u0338", "&NotHumpDownHump;");
        initialMap.put("\u2275", "&NotGreaterTilde;");
        initialMap.put("\u2A7E\u0338", "&NotGreaterSlantEqual;");
        initialMap.put("\u2279", "&NotGreaterLess;");
        initialMap.put("\u226B\u0338", "&NotGreaterGreater;");
        initialMap.put("\u2267\u0338", "&NotGreaterFullEqual;");
        initialMap.put("\u2271", "&NotGreaterEqual;");
        initialMap.put("\u226F", "&NotGreater;");
        initialMap.put("\u2204", "&NotExists;");
        initialMap.put("\u2242\u0338", "&NotEqualTilde;");
        initialMap.put("\u2260", "&NotEqual;");
        initialMap.put("\u2209", "&NotElement;");
        initialMap.put("\u2226", "&NotDoubleVerticalBar;");
        initialMap.put("\u226D", "&NotCupCap;");
        initialMap.put("\u2262", "&NotCongruent;");
        initialMap.put("\u00AC", "&not");
        initialMap.put("\u00AC", "&not;");
        initialMap.put("\u2AEC", "&Not;");
        initialMap.put("\u2115", "&Nopf;");
        initialMap.put("\uD835\uDD5F", "&nopf;");
        initialMap.put("\u00A0", "&NonBreakingSpace;");
        initialMap.put("\u2060", "&NoBreak;");
        initialMap.put("\u2224", "&nmid;");
        initialMap.put("\u226A\u0338", "&nLtv;");
        initialMap.put("\u22EC", "&nltrie;");
        initialMap.put("\u22EA", "&nltri;");
        initialMap.put("\u226E", "&nlt;");
        initialMap.put("\u226A\u20D2", "&nLt;");
        initialMap.put("\u2274", "&nlsim;");
        initialMap.put("\u22D8\u0338", "&nLl;");
        initialMap.put("\u226E", "&nless;");
        initialMap.put("\u2A7D\u0338", "&nles;");
        initialMap.put("\u2A7D\u0338", "&nleqslant;");
        initialMap.put("\u2266\u0338", "&nleqq;");
        initialMap.put("\u2270", "&nleq;");
        initialMap.put("\u21CE", "&nLeftrightarrow;");
        initialMap.put("\u21AE", "&nleftrightarrow;");
        initialMap.put("\u21CD", "&nLeftarrow;");
        initialMap.put("\u219A", "&nleftarrow;");
        initialMap.put("\u2270", "&nle;");
        initialMap.put("\u2266\u0338", "&nlE;");
        initialMap.put("\u2025", "&nldr;");
        initialMap.put("\u21CD", "&nlArr;");
        initialMap.put("\u219A", "&nlarr;");
        initialMap.put("\u045A", "&njcy;");
        initialMap.put("\u040A", "&NJcy;");
        initialMap.put("\u220B", "&niv;");
        initialMap.put("\u22FA", "&nisd;");
        initialMap.put("\u22FC", "&nis;");
        initialMap.put("\u220B", "&ni;");
        initialMap.put("\u2AF2", "&nhpar;");
        initialMap.put("\u21CE", "&nhArr;");
        initialMap.put("\u21AE", "&nharr;");
        initialMap.put("\u226B\u0338", "&nGtv;");
        initialMap.put("\u226F", "&ngtr;");
        initialMap.put("\u226F", "&ngt;");
        initialMap.put("\u226B\u20D2", "&nGt;");
        initialMap.put("\u2275", "&ngsim;");
        initialMap.put("\u22D9\u0338", "&nGg;");
        initialMap.put("\u2A7E\u0338", "&nges;");
        initialMap.put("\u2A7E\u0338", "&ngeqslant;");
        initialMap.put("\u2267\u0338", "&ngeqq;");
        initialMap.put("\u2271", "&ngeq;");
        initialMap.put("\u2271", "&nge;");
        initialMap.put("\u2267\u0338", "&ngE;");
        initialMap.put("\uD835\uDD2B", "&nfr;");
        initialMap.put("\uD835\uDD11", "&Nfr;");
        initialMap.put("\u2204", "&nexists;");
        initialMap.put("\u2204", "&nexist;");
        initialMap.put("\n", "&NewLine;");
        initialMap.put("\u226A", "&NestedLessLess;");
        initialMap.put("\u226B", "&NestedGreaterGreater;");
        initialMap.put("\u2242\u0338", "&nesim;");
        initialMap.put("\u2928", "&nesear;");
        initialMap.put("\u2262", "&nequiv;");
        initialMap.put("\u200B", "&NegativeVeryThinSpace;");
        initialMap.put("\u200B", "&NegativeThinSpace;");
        initialMap.put("\u200B", "&NegativeThickSpace;");
        initialMap.put("\u200B", "&NegativeMediumSpace;");
        initialMap.put("\u2250\u0338", "&nedot;");
        initialMap.put("\u2260", "&ne;");
        initialMap.put("\u2197", "&nearrow;");
        initialMap.put("\u21D7", "&neArr;");
        initialMap.put("\u2197", "&nearr;");
        initialMap.put("\u2924", "&nearhk;");
        initialMap.put("\u2013", "&ndash;");
        initialMap.put("\u043D", "&ncy;");
        initialMap.put("\u041D", "&Ncy;");
        initialMap.put("\u2A42", "&ncup;");
        initialMap.put("\u2A6D\u0338", "&ncongdot;");
        initialMap.put("\u2247", "&ncong;");
        initialMap.put("\u0146", "&ncedil;");
        initialMap.put("\u0145", "&Ncedil;");
        initialMap.put("\u0148", "&ncaron;");
        initialMap.put("\u0147", "&Ncaron;");
        initialMap.put("\u2A43", "&ncap;");
        initialMap.put("\u224F\u0338", "&nbumpe;");
        initialMap.put("\u224E\u0338", "&nbump;");
        initialMap.put("\u00A0", "&nbsp");
        initialMap.put("\u00A0", "&nbsp;");
        initialMap.put("\u266E", "&natur;");
        initialMap.put("\u2115", "&naturals;");
        initialMap.put("\u266E", "&natural;");
        initialMap.put("\u2249", "&napprox;");
        initialMap.put("\u0149", "&napos;");
        initialMap.put("\u224B\u0338", "&napid;");
        initialMap.put("\u2A70\u0338", "&napE;");
        initialMap.put("\u2249", "&nap;");
        initialMap.put("\u2220\u20D2", "&nang;");
        initialMap.put("\u0144", "&nacute;");
        initialMap.put("\u0143", "&Nacute;");
        initialMap.put("\u2207", "&nabla;");
        initialMap.put("\u22B8", "&mumap;");
        initialMap.put("\u22B8", "&multimap;");
        initialMap.put("\u03BC", "&mu;");
        initialMap.put("\u039C", "&Mu;");
        initialMap.put("\u223E", "&mstpos;");
        initialMap.put("\u2133", "&Mscr;");
        initialMap.put("\uD835\uDCC2", "&mscr;");
        initialMap.put("\u2213", "&mp;");
        initialMap.put("\uD835\uDD5E", "&mopf;");
        initialMap.put("\uD835\uDD44", "&Mopf;");
        initialMap.put("\u22A7", "&models;");
        initialMap.put("\u2213", "&mnplus;");
        initialMap.put("\u2026", "&mldr;");
        initialMap.put("\u2ADB", "&mlcp;");
        initialMap.put("\u2213", "&MinusPlus;");
        initialMap.put("\u2A2A", "&minusdu;");
        initialMap.put("\u2238", "&minusd;");
        initialMap.put("\u2212", "&minus;");
        initialMap.put("\u229F", "&minusb;");
        initialMap.put("\u00B7", "&middot");
        initialMap.put("\u00B7", "&middot;");
        initialMap.put("\u2223", "&mid;");
        initialMap.put("\u2AF0", "&midcir;");
        initialMap.put("\u002A", "&midast;");
        initialMap.put("\u00B5", "&micro");
        initialMap.put("\u00B5", "&micro;");
        initialMap.put("\u2127", "&mho;");
        initialMap.put("\uD835\uDD2A", "&mfr;");
        initialMap.put("\uD835\uDD10", "&Mfr;");
        initialMap.put("\u2133", "&Mellintrf;");
        initialMap.put("\u205F", "&MediumSpace;");
        initialMap.put("\u2221", "&measuredangle;");
        initialMap.put("\u223A", "&mDDot;");
        initialMap.put("\u2014", "&mdash;");
        initialMap.put("\u043C", "&mcy;");
        initialMap.put("\u041C", "&Mcy;");
        initialMap.put("\u2A29", "&mcomma;");
        initialMap.put("\u25AE", "&marker;");
        initialMap.put("\u21A5", "&mapstoup;");
        initialMap.put("\u21A4", "&mapstoleft;");
        initialMap.put("\u21A7", "&mapstodown;");
        initialMap.put("\u21A6", "&mapsto;");
        initialMap.put("\u21A6", "&map;");
        initialMap.put("\u2905", "&Map;");
        initialMap.put("\u2720", "&maltese;");
        initialMap.put("\u2720", "&malt;");
        initialMap.put("\u2642", "&male;");
        initialMap.put("\u00AF", "&macr");
        initialMap.put("\u00AF", "&macr;");
        initialMap.put("\u2268\uFE00", "&lvnE;");
        initialMap.put("\u2268\uFE00", "&lvertneqq;");
        initialMap.put("\u2966", "&luruhar;");
        initialMap.put("\u294A", "&lurdshar;");
        initialMap.put("\u2996", "&ltrPar;");
        initialMap.put("\u25C2", "&ltrif;");
        initialMap.put("\u22B4", "&ltrie;");
        initialMap.put("\u25C3", "&ltri;");
        initialMap.put("\u2A7B", "&ltquest;");
        initialMap.put("\u2976", "&ltlarr;");
        initialMap.put("\u22C9", "&ltimes;");
        initialMap.put("\u22CB", "&lthree;");
        initialMap.put("\u22D6", "&ltdot;");
        initialMap.put("\u226A", "&Lt;");
        initialMap.put("\u003C", "&LT");
        initialMap.put("\u003C", "&LT;");
        initialMap.put("\u003C", "&lt");
        initialMap.put("\u003C", "&lt;");
        initialMap.put("\u2A79", "&ltcir;");
        initialMap.put("\u2AA6", "&ltcc;");
        initialMap.put("\u0142", "&lstrok;");
        initialMap.put("\u0141", "&Lstrok;");
        initialMap.put("\u201A", "&lsquor;");
        initialMap.put("\u2018", "&lsquo;");
        initialMap.put("\u005B", "&lsqb;");
        initialMap.put("\u2A8F", "&lsimg;");
        initialMap.put("\u2A8D", "&lsime;");
        initialMap.put("\u2272", "&lsim;");
        initialMap.put("\u21B0", "&Lsh;");
        initialMap.put("\u21B0", "&lsh;");
        initialMap.put("\u2112", "&Lscr;");
        initialMap.put("\uD835\uDCC1", "&lscr;");
        initialMap.put("\u2039", "&lsaquo;");
        initialMap.put("\u22BF", "&lrtri;");
        initialMap.put("\u200E", "&lrm;");
        initialMap.put("\u296D", "&lrhard;");
        initialMap.put("\u21CB", "&lrhar;");
        initialMap.put("\u231F", "&lrcorner;");
        initialMap.put("\u21C6", "&lrarr;");
        initialMap.put("\u2993", "&lparlt;");
        initialMap.put("\u0028", "&lpar;");
        initialMap.put("\u29EB", "&lozf;");
        initialMap.put("\u25CA", "&lozenge;");
        initialMap.put("\u25CA", "&loz;");
        initialMap.put("\u2198", "&LowerRightArrow;");
        initialMap.put("\u2199", "&LowerLeftArrow;");
        initialMap.put("\u005F", "&lowbar;");
        initialMap.put("\u2217", "&lowast;");
        initialMap.put("\u2A34", "&lotimes;");
        initialMap.put("\u2A2D", "&loplus;");
        initialMap.put("\uD835\uDD5D", "&lopf;");
        initialMap.put("\uD835\uDD43", "&Lopf;");
        initialMap.put("\u2985", "&lopar;");
        initialMap.put("\u21AC", "&looparrowright;");
        initialMap.put("\u21AB", "&looparrowleft;");
        initialMap.put("\u27F9", "&Longrightarrow;");
        initialMap.put("\u27F6", "&LongRightArrow;");
        initialMap.put("\u27F6", "&longrightarrow;");
        initialMap.put("\u27FC", "&longmapsto;");
        initialMap.put("\u27FA", "&Longleftrightarrow;");
        initialMap.put("\u27F7", "&LongLeftRightArrow;");
        initialMap.put("\u27F7", "&longleftrightarrow;");
        initialMap.put("\u27F8", "&Longleftarrow;");
        initialMap.put("\u27F5", "&LongLeftArrow;");
        initialMap.put("\u27F5", "&longleftarrow;");
        initialMap.put("\u27E6", "&lobrk;");
        initialMap.put("\u21FD", "&loarr;");
        initialMap.put("\u27EC", "&loang;");
        initialMap.put("\u22E6", "&lnsim;");
        initialMap.put("\u2268", "&lneqq;");
        initialMap.put("\u2A87", "&lneq;");
        initialMap.put("\u2268", "&lnE;");
        initialMap.put("\u2A87", "&lne;");
        initialMap.put("\u2A89", "&lnapprox;");
        initialMap.put("\u2A89", "&lnap;");
        initialMap.put("\u23B0", "&lmoust;");
        initialMap.put("\u23B0", "&lmoustache;");
        initialMap.put("\u0140", "&lmidot;");
        initialMap.put("\u013F", "&Lmidot;");
        initialMap.put("\u25FA", "&lltri;");
        initialMap.put("\u296B", "&llhard;");
        initialMap.put("\u21DA", "&Lleftarrow;");
        initialMap.put("\u231E", "&llcorner;");
        initialMap.put("\u22D8", "&Ll;");
        initialMap.put("\u226A", "&ll;");
        initialMap.put("\u21C7", "&llarr;");
        initialMap.put("\u0459", "&ljcy;");
        initialMap.put("\u0409", "&LJcy;");
        initialMap.put("\u2584", "&lhblk;");
        initialMap.put("\u296A", "&lharul;");
        initialMap.put("\u21BC", "&lharu;");
        initialMap.put("\u21BD", "&lhard;");
        initialMap.put("\u2962", "&lHar;");
        initialMap.put("\u2A91", "&lgE;");
        initialMap.put("\u2276", "&lg;");
        initialMap.put("\uD835\uDD29", "&lfr;");
        initialMap.put("\uD835\uDD0F", "&Lfr;");
        initialMap.put("\u230A", "&lfloor;");
        initialMap.put("\u297C", "&lfisht;");
        initialMap.put("\u2272", "&LessTilde;");
        initialMap.put("\u2A7D", "&LessSlantEqual;");
        initialMap.put("\u2272", "&lesssim;");
        initialMap.put("\u2AA1", "&LessLess;");
        initialMap.put("\u2276", "&lessgtr;");
        initialMap.put("\u2276", "&LessGreater;");
        initialMap.put("\u2266", "&LessFullEqual;");
        initialMap.put("\u22DA", "&LessEqualGreater;");
        initialMap.put("\u2A8B", "&lesseqqgtr;");
        initialMap.put("\u22DA", "&lesseqgtr;");
        initialMap.put("\u22D6", "&lessdot;");
        initialMap.put("\u2A85", "&lessapprox;");
        initialMap.put("\u2A93", "&lesges;");
        initialMap.put("\u22DA\uFE00", "&lesg;");
        initialMap.put("\u2A83", "&lesdotor;");
        initialMap.put("\u2A81", "&lesdoto;");
        initialMap.put("\u2A7F", "&lesdot;");
        initialMap.put("\u2A7D", "&les;");
        initialMap.put("\u2AA8", "&lescc;");
        initialMap.put("\u2A7D", "&leqslant;");
        initialMap.put("\u2266", "&leqq;");
        initialMap.put("\u2264", "&leq;");
        initialMap.put("\u22DA", "&leg;");
        initialMap.put("\u2A8B", "&lEg;");
        initialMap.put("\u21BC", "&LeftVector;");
        initialMap.put("\u2952", "&LeftVectorBar;");
        initialMap.put("\u21BF", "&LeftUpVector;");
        initialMap.put("\u2958", "&LeftUpVectorBar;");
        initialMap.put("\u2960", "&LeftUpTeeVector;");
        initialMap.put("\u2951", "&LeftUpDownVector;");
        initialMap.put("\u22B4", "&LeftTriangleEqual;");
        initialMap.put("\u22B2", "&LeftTriangle;");
        initialMap.put("\u29CF", "&LeftTriangleBar;");
        initialMap.put("\u22CB", "&leftthreetimes;");
        initialMap.put("\u295A", "&LeftTeeVector;");
        initialMap.put("\u22A3", "&LeftTee;");
        initialMap.put("\u21A4", "&LeftTeeArrow;");
        initialMap.put("\u294E", "&LeftRightVector;");
        initialMap.put("\u21AD", "&leftrightsquigarrow;");
        initialMap.put("\u21CB", "&leftrightharpoons;");
        initialMap.put("\u21C6", "&leftrightarrows;");
        initialMap.put("\u21D4", "&Leftrightarrow;");
        initialMap.put("\u2194", "&LeftRightArrow;");
        initialMap.put("\u2194", "&leftrightarrow;");
        initialMap.put("\u21C7", "&leftleftarrows;");
        initialMap.put("\u21BC", "&leftharpoonup;");
        initialMap.put("\u21BD", "&leftharpoondown;");
        initialMap.put("\u230A", "&LeftFloor;");
        initialMap.put("\u21C3", "&LeftDownVector;");
        initialMap.put("\u2959", "&LeftDownVectorBar;");
        initialMap.put("\u2961", "&LeftDownTeeVector;");
        initialMap.put("\u27E6", "&LeftDoubleBracket;");
        initialMap.put("\u2308", "&LeftCeiling;");
        initialMap.put("\u21A2", "&leftarrowtail;");
        initialMap.put("\u21C6", "&LeftArrowRightArrow;");
        initialMap.put("\u21D0", "&Leftarrow;");
        initialMap.put("\u2190", "&LeftArrow;");
        initialMap.put("\u2190", "&leftarrow;");
        initialMap.put("\u21E4", "&LeftArrowBar;");
        initialMap.put("\u27E8", "&LeftAngleBracket;");
        initialMap.put("\u2266", "&lE;");
        initialMap.put("\u2264", "&le;");
        initialMap.put("\u21B2", "&ldsh;");
        initialMap.put("\u294B", "&ldrushar;");
        initialMap.put("\u2967", "&ldrdhar;");
        initialMap.put("\u201E", "&ldquor;");
        initialMap.put("\u201C", "&ldquo;");
        initialMap.put("\u2936", "&ldca;");
        initialMap.put("\u043B", "&lcy;");
        initialMap.put("\u041B", "&Lcy;");
        initialMap.put("\u007B", "&lcub;");
        initialMap.put("\u2308", "&lceil;");
        initialMap.put("\u013C", "&lcedil;");
        initialMap.put("\u013B", "&Lcedil;");
        initialMap.put("\u013E", "&lcaron;");
        initialMap.put("\u013D", "&Lcaron;");
        initialMap.put("\u298D", "&lbrkslu;");
        initialMap.put("\u298F", "&lbrksld;");
        initialMap.put("\u298B", "&lbrke;");
        initialMap.put("\u005B", "&lbrack;");
        initialMap.put("\u007B", "&lbrace;");
        initialMap.put("\u2772", "&lbbrk;");
        initialMap.put("\u290E", "&lBarr;");
        initialMap.put("\u290C", "&lbarr;");
        initialMap.put("\u2AAD\uFE00", "&lates;");
        initialMap.put("\u2AAD", "&late;");
        initialMap.put("\u2AAB", "&lat;");
        initialMap.put("\u291B", "&lAtail;");
        initialMap.put("\u2919", "&latail;");
        initialMap.put("\u21A2", "&larrtl;");
        initialMap.put("\u2973", "&larrsim;");
        initialMap.put("\u2939", "&larrpl;");
        initialMap.put("\u21AB", "&larrlp;");
        initialMap.put("\u21A9", "&larrhk;");
        initialMap.put("\u291D", "&larrfs;");
        initialMap.put("\u21D0", "&lArr;");
        initialMap.put("\u219E", "&Larr;");
        initialMap.put("\u2190", "&larr;");
        initialMap.put("\u291F", "&larrbfs;");
        initialMap.put("\u21E4", "&larrb;");
        initialMap.put("\u00AB", "&laquo");
        initialMap.put("\u00AB", "&laquo;");
        initialMap.put("\u2112", "&Laplacetrf;");
        initialMap.put("\u2A85", "&lap;");
        initialMap.put("\u27E8", "&langle;");
        initialMap.put("\u2991", "&langd;");
        initialMap.put("\u27EA", "&Lang;");
        initialMap.put("\u27E8", "&lang;");
        initialMap.put("\u03BB", "&lambda;");
        initialMap.put("\u039B", "&Lambda;");
        initialMap.put("\u2112", "&lagran;");
        initialMap.put("\u29B4", "&laemptyv;");
        initialMap.put("\u013A", "&lacute;");
        initialMap.put("\u0139", "&Lacute;");
        initialMap.put("\u21DA", "&lAarr;");
        initialMap.put("\uD835\uDCC0", "&kscr;");
        initialMap.put("\uD835\uDCA6", "&Kscr;");
        initialMap.put("\uD835\uDD5C", "&kopf;");
        initialMap.put("\uD835\uDD42", "&Kopf;");
        initialMap.put("\u045C", "&kjcy;");
        initialMap.put("\u040C", "&KJcy;");
        initialMap.put("\u0445", "&khcy;");
        initialMap.put("\u0425", "&KHcy;");
        initialMap.put("\u0138", "&kgreen;");
        initialMap.put("\uD835\uDD28", "&kfr;");
        initialMap.put("\uD835\uDD0E", "&Kfr;");
        initialMap.put("\u043A", "&kcy;");
        initialMap.put("\u041A", "&Kcy;");
        initialMap.put("\u0137", "&kcedil;");
        initialMap.put("\u0136", "&Kcedil;");
        initialMap.put("\u03F0", "&kappav;");
        initialMap.put("\u03BA", "&kappa;");
        initialMap.put("\u039A", "&Kappa;");
        initialMap.put("\u0454", "&jukcy;");
        initialMap.put("\u0404", "&Jukcy;");
        initialMap.put("\u0458", "&jsercy;");
        initialMap.put("\u0408", "&Jsercy;");
        initialMap.put("\uD835\uDCBF", "&jscr;");
        initialMap.put("\uD835\uDCA5", "&Jscr;");
        initialMap.put("\uD835\uDD5B", "&jopf;");
        initialMap.put("\uD835\uDD41", "&Jopf;");
        initialMap.put("\u0237", "&jmath;");
        initialMap.put("\uD835\uDD27", "&jfr;");
        initialMap.put("\uD835\uDD0D", "&Jfr;");
        initialMap.put("\u0439", "&jcy;");
        initialMap.put("\u0419", "&Jcy;");
        initialMap.put("\u0135", "&jcirc;");
        initialMap.put("\u0134", "&Jcirc;");
        initialMap.put("\u00EF", "&iuml");
        initialMap.put("\u00EF", "&iuml;");
        initialMap.put("\u00CF", "&Iuml");
        initialMap.put("\u00CF", "&Iuml;");
        initialMap.put("\u0456", "&iukcy;");
        initialMap.put("\u0406", "&Iukcy;");
        initialMap.put("\u0129", "&itilde;");
        initialMap.put("\u0128", "&Itilde;");
        initialMap.put("\u2062", "&it;");
        initialMap.put("\u2208", "&isinv;");
        initialMap.put("\u22F3", "&isinsv;");
        initialMap.put("\u22F4", "&isins;");
        initialMap.put("\u22F9", "&isinE;");
        initialMap.put("\u22F5", "&isindot;");
        initialMap.put("\u2208", "&isin;");
        initialMap.put("\u2110", "&Iscr;");
        initialMap.put("\uD835\uDCBE", "&iscr;");
        initialMap.put("\u00BF", "&iquest");
        initialMap.put("\u00BF", "&iquest;");
        initialMap.put("\u2A3C", "&iprod;");
        initialMap.put("\u03B9", "&iota;");
        initialMap.put("\u0399", "&Iota;");
        initialMap.put("\uD835\uDD5A", "&iopf;");
        initialMap.put("\uD835\uDD40", "&Iopf;");
        initialMap.put("\u012F", "&iogon;");
        initialMap.put("\u012E", "&Iogon;");
        initialMap.put("\u0451", "&iocy;");
        initialMap.put("\u0401", "&IOcy;");
        initialMap.put("\u2062", "&InvisibleTimes;");
        initialMap.put("\u2063", "&InvisibleComma;");
        initialMap.put("\u2A3C", "&intprod;");
        initialMap.put("\u2A17", "&intlarhk;");
        initialMap.put("\u22C2", "&Intersection;");
        initialMap.put("\u22BA", "&intercal;");
        initialMap.put("\u222B", "&Integral;");
        initialMap.put("\u2124", "&integers;");
        initialMap.put("\u222C", "&Int;");
        initialMap.put("\u222B", "&int;");
        initialMap.put("\u22BA", "&intcal;");
        initialMap.put("\u0131", "&inodot;");
        initialMap.put("\u29DD", "&infintie;");
        initialMap.put("\u221E", "&infin;");
        initialMap.put("\u2208", "&in;");
        initialMap.put("\u2105", "&incare;");
        initialMap.put("\u21D2", "&Implies;");
        initialMap.put("\u01B5", "&imped;");
        initialMap.put("\u22B7", "&imof;");
        initialMap.put("\u2111", "&Im;");
        initialMap.put("\u0131", "&imath;");
        initialMap.put("\u2111", "&imagpart;");
        initialMap.put("\u2110", "&imagline;");
        initialMap.put("\u2148", "&ImaginaryI;");
        initialMap.put("\u2111", "&image;");
        initialMap.put("\u012B", "&imacr;");
        initialMap.put("\u012A", "&Imacr;");
        initialMap.put("\u0133", "&ijlig;");
        initialMap.put("\u0132", "&IJlig;");
        initialMap.put("\u2129", "&iiota;");
        initialMap.put("\u29DC", "&iinfin;");
        initialMap.put("\u222D", "&iiint;");
        initialMap.put("\u2A0C", "&iiiint;");
        initialMap.put("\u2148", "&ii;");
        initialMap.put("\u00EC", "&igrave");
        initialMap.put("\u00EC", "&igrave;");
        initialMap.put("\u00CC", "&Igrave");
        initialMap.put("\u00CC", "&Igrave;");
        initialMap.put("\u2111", "&Ifr;");
        initialMap.put("\uD835\uDD26", "&ifr;");
        initialMap.put("\u21D4", "&iff;");
        initialMap.put("\u00A1", "&iexcl");
        initialMap.put("\u00A1", "&iexcl;");
        initialMap.put("\u0435", "&iecy;");
        initialMap.put("\u0415", "&IEcy;");
        initialMap.put("\u0130", "&Idot;");
        initialMap.put("\u0438", "&icy;");
        initialMap.put("\u0418", "&Icy;");
        initialMap.put("\u00EE", "&icirc");
        initialMap.put("\u00EE", "&icirc;");
        initialMap.put("\u00CE", "&Icirc");
        initialMap.put("\u00CE", "&Icirc;");
        initialMap.put("\u2063", "&ic;");
        initialMap.put("\u00ED", "&iacute");
        initialMap.put("\u00ED", "&iacute;");
        initialMap.put("\u00CD", "&Iacute");
        initialMap.put("\u00CD", "&Iacute;");
        initialMap.put("\u2010", "&hyphen;");
        initialMap.put("\u2043", "&hybull;");
        initialMap.put("\u224F", "&HumpEqual;");
        initialMap.put("\u224E", "&HumpDownHump;");
        initialMap.put("\u0127", "&hstrok;");
        initialMap.put("\u0126", "&Hstrok;");
        initialMap.put("\u210F", "&hslash;");
        initialMap.put("\u210B", "&Hscr;");
        initialMap.put("\uD835\uDCBD", "&hscr;");
        initialMap.put("\u2500", "&HorizontalLine;");
        initialMap.put("\u2015", "&horbar;");
        initialMap.put("\u210D", "&Hopf;");
        initialMap.put("\uD835\uDD59", "&hopf;");
        initialMap.put("\u21AA", "&hookrightarrow;");
        initialMap.put("\u21A9", "&hookleftarrow;");
        initialMap.put("\u223B", "&homtht;");
        initialMap.put("\u21FF", "&hoarr;");
        initialMap.put("\u2926", "&hkswarow;");
        initialMap.put("\u2925", "&hksearow;");
        initialMap.put("\u210B", "&HilbertSpace;");
        initialMap.put("\u210C", "&Hfr;");
        initialMap.put("\uD835\uDD25", "&hfr;");
        initialMap.put("\u22B9", "&hercon;");
        initialMap.put("\u2026", "&hellip;");
        initialMap.put("\u2665", "&heartsuit;");
        initialMap.put("\u2665", "&hearts;");
        initialMap.put("\u0125", "&hcirc;");
        initialMap.put("\u0124", "&Hcirc;");
        initialMap.put("\u210F", "&hbar;");
        initialMap.put("\u005E", "&Hat;");
        initialMap.put("\u21AD", "&harrw;");
        initialMap.put("\u21D4", "&hArr;");
        initialMap.put("\u2194", "&harr;");
        initialMap.put("\u2948", "&harrcir;");
        initialMap.put("\u044A", "&hardcy;");
        initialMap.put("\u042A", "&HARDcy;");
        initialMap.put("\u210B", "&hamilt;");
        initialMap.put("\u00BD", "&half;");
        initialMap.put("\u200A", "&hairsp;");
        initialMap.put("\u02C7", "&Hacek;");
        initialMap.put("\u2269\uFE00", "&gvnE;");
        initialMap.put("\u2269\uFE00", "&gvertneqq;");
        initialMap.put("\u2273", "&gtrsim;");
        initialMap.put("\u2277", "&gtrless;");
        initialMap.put("\u2A8C", "&gtreqqless;");
        initialMap.put("\u22DB", "&gtreqless;");
        initialMap.put("\u22D7", "&gtrdot;");
        initialMap.put("\u2978", "&gtrarr;");
        initialMap.put("\u2A86", "&gtrapprox;");
        initialMap.put("\u2A7C", "&gtquest;");
        initialMap.put("\u2995", "&gtlPar;");
        initialMap.put("\u22D7", "&gtdot;");
        initialMap.put("\u226B", "&Gt;");
        initialMap.put("\u003E", "&GT");
        initialMap.put("\u003E", "&GT;");
        initialMap.put("\u003E", "&gt");
        initialMap.put("\u003E", "&gt;");
        initialMap.put("\u2A7A", "&gtcir;");
        initialMap.put("\u2AA7", "&gtcc;");
        initialMap.put("\u2A90", "&gsiml;");
        initialMap.put("\u2A8E", "&gsime;");
        initialMap.put("\u2273", "&gsim;");
        initialMap.put("\u210A", "&gscr;");
        initialMap.put("\uD835\uDCA2", "&Gscr;");
        initialMap.put("\u2273", "&GreaterTilde;");
        initialMap.put("\u2A7E", "&GreaterSlantEqual;");
        initialMap.put("\u2277", "&GreaterLess;");
        initialMap.put("\u2AA2", "&GreaterGreater;");
        initialMap.put("\u2267", "&GreaterFullEqual;");
        initialMap.put("\u22DB", "&GreaterEqualLess;");
        initialMap.put("\u2265", "&GreaterEqual;");
        initialMap.put("\u0060", "&grave;");
        initialMap.put("\uD835\uDD58", "&gopf;");
        initialMap.put("\uD835\uDD3E", "&Gopf;");
        initialMap.put("\u22E7", "&gnsim;");
        initialMap.put("\u2269", "&gneqq;");
        initialMap.put("\u2A88", "&gneq;");
        initialMap.put("\u2269", "&gnE;");
        initialMap.put("\u2A88", "&gne;");
        initialMap.put("\u2A8A", "&gnapprox;");
        initialMap.put("\u2A8A", "&gnap;");
        initialMap.put("\u2AA4", "&glj;");
        initialMap.put("\u2A92", "&glE;");
        initialMap.put("\u2277", "&gl;");
        initialMap.put("\u2AA5", "&gla;");
        initialMap.put("\u0453", "&gjcy;");
        initialMap.put("\u0403", "&GJcy;");
        initialMap.put("\u2137", "&gimel;");
        initialMap.put("\u22D9", "&ggg;");
        initialMap.put("\u22D9", "&Gg;");
        initialMap.put("\u226B", "&gg;");
        initialMap.put("\uD835\uDD24", "&gfr;");
        initialMap.put("\uD835\uDD0A", "&Gfr;");
        initialMap.put("\u2A94", "&gesles;");
        initialMap.put("\u22DB\uFE00", "&gesl;");
        initialMap.put("\u2A84", "&gesdotol;");
        initialMap.put("\u2A82", "&gesdoto;");
        initialMap.put("\u2A80", "&gesdot;");
        initialMap.put("\u2A7E", "&ges;");
        initialMap.put("\u2AA9", "&gescc;");
        initialMap.put("\u2A7E", "&geqslant;");
        initialMap.put("\u2267", "&geqq;");
        initialMap.put("\u2265", "&geq;");
        initialMap.put("\u22DB", "&gel;");
        initialMap.put("\u2A8C", "&gEl;");
        initialMap.put("\u2267", "&gE;");
        initialMap.put("\u2265", "&ge;");
        initialMap.put("\u0121", "&gdot;");
        initialMap.put("\u0120", "&Gdot;");
        initialMap.put("\u0433", "&gcy;");
        initialMap.put("\u0413", "&Gcy;");
        initialMap.put("\u011D", "&gcirc;");
        initialMap.put("\u011C", "&Gcirc;");
        initialMap.put("\u0122", "&Gcedil;");
        initialMap.put("\u011F", "&gbreve;");
        initialMap.put("\u011E", "&Gbreve;");
        initialMap.put("\u2A86", "&gap;");
        initialMap.put("\u03DD", "&gammad;");
        initialMap.put("\u03DC", "&Gammad;");
        initialMap.put("\u03B3", "&gamma;");
        initialMap.put("\u0393", "&Gamma;");
        initialMap.put("\u01F5", "&gacute;");
        initialMap.put("\u2131", "&Fscr;");
        initialMap.put("\uD835\uDCBB", "&fscr;");
        initialMap.put("\u2322", "&frown;");
        initialMap.put("\u2044", "&frasl;");
        initialMap.put("\u215E", "&frac78;");
        initialMap.put("\u215D", "&frac58;");
        initialMap.put("\u215A", "&frac56;");
        initialMap.put("\u2158", "&frac45;");
        initialMap.put("\u215C", "&frac38;");
        initialMap.put("\u2157", "&frac35;");
        initialMap.put("\u00BE", "&frac34");
        initialMap.put("\u00BE", "&frac34;");
        initialMap.put("\u2156", "&frac25;");
        initialMap.put("\u2154", "&frac23;");
        initialMap.put("\u215B", "&frac18;");
        initialMap.put("\u2159", "&frac16;");
        initialMap.put("\u2155", "&frac15;");
        initialMap.put("\u00BC", "&frac14");
        initialMap.put("\u00BC", "&frac14;");
        initialMap.put("\u2153", "&frac13;");
        initialMap.put("\u00BD", "&frac12");
        initialMap.put("\u00BD", "&frac12;");
        initialMap.put("\u2A0D", "&fpartint;");
        initialMap.put("\u2131", "&Fouriertrf;");
        initialMap.put("\u2AD9", "&forkv;");
        initialMap.put("\u22D4", "&fork;");
        initialMap.put("\u2200", "&ForAll;");
        initialMap.put("\u2200", "&forall;");
        initialMap.put("\uD835\uDD57", "&fopf;");
        initialMap.put("\uD835\uDD3D", "&Fopf;");
        initialMap.put("\u0192", "&fnof;");
        initialMap.put("\u25B1", "&fltns;");
        initialMap.put("\uFB02", "&fllig;");
        initialMap.put("\u266D", "&flat;");
        initialMap.put("\u0066\u006A", "&fjlig;");
        initialMap.put("\u25AA", "&FilledVerySmallSquare;");
        initialMap.put("\u25FC", "&FilledSmallSquare;");
        initialMap.put("\uFB01", "&filig;");
        initialMap.put("\uD835\uDD23", "&ffr;");
        initialMap.put("\uD835\uDD09", "&Ffr;");
        initialMap.put("\uFB04", "&ffllig;");
        initialMap.put("\uFB00", "&fflig;");
        initialMap.put("\uFB03", "&ffilig;");
        initialMap.put("\u2640", "&female;");
        initialMap.put("\u0444", "&fcy;");
        initialMap.put("\u0424", "&Fcy;");
        initialMap.put("\u2252", "&fallingdotseq;");
        initialMap.put("\u2147", "&ExponentialE;");
        initialMap.put("\u2147", "&exponentiale;");
        initialMap.put("\u2130", "&expectation;");
        initialMap.put("\u2203", "&Exists;");
        initialMap.put("\u2203", "&exist;");
        initialMap.put("\u0021", "&excl;");
        initialMap.put("\u20AC", "&euro;");
        initialMap.put("\u00EB", "&euml");
        initialMap.put("\u00EB", "&euml;");
        initialMap.put("\u00CB", "&Euml");
        initialMap.put("\u00CB", "&Euml;");
        initialMap.put("\u00F0", "&eth");
        initialMap.put("\u00F0", "&eth;");
        initialMap.put("\u00D0", "&ETH");
        initialMap.put("\u00D0", "&ETH;");
        initialMap.put("\u03B7", "&eta;");
        initialMap.put("\u0397", "&Eta;");
        initialMap.put("\u2242", "&esim;");
        initialMap.put("\u2A73", "&Esim;");
        initialMap.put("\u2250", "&esdot;");
        initialMap.put("\u2130", "&Escr;");
        initialMap.put("\u212F", "&escr;");
        initialMap.put("\u2253", "&erDot;");
        initialMap.put("\u2971", "&erarr;");
        initialMap.put("\u29E5", "&eqvparsl;");
        initialMap.put("\u2A78", "&equivDD;");
        initialMap.put("\u2261", "&equiv;");
        initialMap.put("\u21CC", "&Equilibrium;");
        initialMap.put("\u225F", "&equest;");
        initialMap.put("\u2242", "&EqualTilde;");
        initialMap.put("\u003D", "&equals;");
        initialMap.put("\u2A75", "&Equal;");
        initialMap.put("\u2A95", "&eqslantless;");
        initialMap.put("\u2A96", "&eqslantgtr;");
        initialMap.put("\u2242", "&eqsim;");
        initialMap.put("\u2255", "&eqcolon;");
        initialMap.put("\u2256", "&eqcirc;");
        initialMap.put("\u03F5", "&epsiv;");
        initialMap.put("\u03B5", "&epsilon;");
        initialMap.put("\u0395", "&Epsilon;");
        initialMap.put("\u03B5", "&epsi;");
        initialMap.put("\u2A71", "&eplus;");
        initialMap.put("\u29E3", "&eparsl;");
        initialMap.put("\u22D5", "&epar;");
        initialMap.put("\uD835\uDD56", "&eopf;");
        initialMap.put("\uD835\uDD3C", "&Eopf;");
        initialMap.put("\u0119", "&eogon;");
        initialMap.put("\u0118", "&Eogon;");
        initialMap.put("\u2002", "&ensp;");
        initialMap.put("\u014B", "&eng;");
        initialMap.put("\u014A", "&ENG;");
        initialMap.put("\u2003", "&emsp;");
        initialMap.put("\u2005", "&emsp14;");
        initialMap.put("\u2004", "&emsp13;");
        initialMap.put("\u25AB", "&EmptyVerySmallSquare;");
        initialMap.put("\u2205", "&emptyv;");
        initialMap.put("\u25FB", "&EmptySmallSquare;");
        initialMap.put("\u2205", "&emptyset;");
        initialMap.put("\u2205", "&empty;");
        initialMap.put("\u0113", "&emacr;");
        initialMap.put("\u0112", "&Emacr;");
        initialMap.put("\u2A97", "&elsdot;");
        initialMap.put("\u2A95", "&els;");
        initialMap.put("\u2113", "&ell;");
        initialMap.put("\u23E7", "&elinters;");
        initialMap.put("\u2208", "&Element;");
        initialMap.put("\u2A99", "&el;");
        initialMap.put("\u2A98", "&egsdot;");
        initialMap.put("\u2A96", "&egs;");
        initialMap.put("\u00E8", "&egrave");
        initialMap.put("\u00E8", "&egrave;");
        initialMap.put("\u00C8", "&Egrave");
        initialMap.put("\u00C8", "&Egrave;");
        initialMap.put("\u2A9A", "&eg;");
        initialMap.put("\uD835\uDD22", "&efr;");
        initialMap.put("\uD835\uDD08", "&Efr;");
        initialMap.put("\u2252", "&efDot;");
        initialMap.put("\u2147", "&ee;");
        initialMap.put("\u2251", "&eDot;");
        initialMap.put("\u0117", "&edot;");
        initialMap.put("\u0116", "&Edot;");
        initialMap.put("\u2A77", "&eDDot;");
        initialMap.put("\u044D", "&ecy;");
        initialMap.put("\u042D", "&Ecy;");
        initialMap.put("\u2255", "&ecolon;");
        initialMap.put("\u2256", "&ecir;");
        initialMap.put("\u00EA", "&ecirc");
        initialMap.put("\u00EA", "&ecirc;");
        initialMap.put("\u00CA", "&Ecirc");
        initialMap.put("\u00CA", "&Ecirc;");
        initialMap.put("\u011B", "&ecaron;");
        initialMap.put("\u011A", "&Ecaron;");
        initialMap.put("\u2A6E", "&easter;");
        initialMap.put("\u00E9", "&eacute");
        initialMap.put("\u00E9", "&eacute;");
        initialMap.put("\u00C9", "&Eacute");
        initialMap.put("\u00C9", "&Eacute;");
        initialMap.put("\u27FF", "&dzigrarr;");
        initialMap.put("\u045F", "&dzcy;");
        initialMap.put("\u040F", "&DZcy;");
        initialMap.put("\u29A6", "&dwangle;");
        initialMap.put("\u296F", "&duhar;");
        initialMap.put("\u21F5", "&duarr;");
        initialMap.put("\u25BE", "&dtrif;");
        initialMap.put("\u25BF", "&dtri;");
        initialMap.put("\u22F1", "&dtdot;");
        initialMap.put("\u0111", "&dstrok;");
        initialMap.put("\u0110", "&Dstrok;");
        initialMap.put("\u29F6", "&dsol;");
        initialMap.put("\u0455", "&dscy;");
        initialMap.put("\u0405", "&DScy;");
        initialMap.put("\uD835\uDCB9", "&dscr;");
        initialMap.put("\uD835\uDC9F", "&Dscr;");
        initialMap.put("\u230C", "&drcrop;");
        initialMap.put("\u231F", "&drcorn;");
        initialMap.put("\u2910", "&drbkarow;");
        initialMap.put("\u22A4", "&DownTee;");
        initialMap.put("\u21A7", "&DownTeeArrow;");
        initialMap.put("\u21C1", "&DownRightVector;");
        initialMap.put("\u2957", "&DownRightVectorBar;");
        initialMap.put("\u295F", "&DownRightTeeVector;");
        initialMap.put("\u21BD", "&DownLeftVector;");
        initialMap.put("\u2956", "&DownLeftVectorBar;");
        initialMap.put("\u295E", "&DownLeftTeeVector;");
        initialMap.put("\u2950", "&DownLeftRightVector;");
        initialMap.put("\u21C2", "&downharpoonright;");
        initialMap.put("\u21C3", "&downharpoonleft;");
        initialMap.put("\u21CA", "&downdownarrows;");
        initialMap.put("\u0311", "&DownBreve;");
        initialMap.put("\u21F5", "&DownArrowUpArrow;");
        initialMap.put("\u21D3", "&Downarrow;");
        initialMap.put("\u2193", "&DownArrow;");
        initialMap.put("\u2193", "&downarrow;");
        initialMap.put("\u2913", "&DownArrowBar;");
        initialMap.put("\u2225", "&DoubleVerticalBar;");
        initialMap.put("\u21D5", "&DoubleUpDownArrow;");
        initialMap.put("\u21D1", "&DoubleUpArrow;");
        initialMap.put("\u22A8", "&DoubleRightTee;");
        initialMap.put("\u21D2", "&DoubleRightArrow;");
        initialMap.put("\u27F9", "&DoubleLongRightArrow;");
        initialMap.put("\u27FA", "&DoubleLongLeftRightArrow;");
        initialMap.put("\u27F8", "&DoubleLongLeftArrow;");
        initialMap.put("\u2AE4", "&DoubleLeftTee;");
        initialMap.put("\u21D4", "&DoubleLeftRightArrow;");
        initialMap.put("\u21D0", "&DoubleLeftArrow;");
        initialMap.put("\u21D3", "&DoubleDownArrow;");
        initialMap.put("\u00A8", "&DoubleDot;");
        initialMap.put("\u222F", "&DoubleContourIntegral;");
        initialMap.put("\u2306", "&doublebarwedge;");
        initialMap.put("\u22A1", "&dotsquare;");
        initialMap.put("\u2214", "&dotplus;");
        initialMap.put("\u2238", "&dotminus;");
        initialMap.put("\u2250", "&DotEqual;");
        initialMap.put("\u2251", "&doteqdot;");
        initialMap.put("\u2250", "&doteq;");
        initialMap.put("\u20DC", "&DotDot;");
        initialMap.put("\u02D9", "&dot;");
        initialMap.put("\u00A8", "&Dot;");
        initialMap.put("\uD835\uDD55", "&dopf;");
        initialMap.put("\uD835\uDD3B", "&Dopf;");
        initialMap.put("\u0024", "&dollar;");
        initialMap.put("\u230D", "&dlcrop;");
        initialMap.put("\u231E", "&dlcorn;");
        initialMap.put("\u0452", "&djcy;");
        initialMap.put("\u0402", "&DJcy;");
        initialMap.put("\u22C7", "&divonx;");
        initialMap.put("\u22C7", "&divideontimes;");
        initialMap.put("\u00F7", "&divide");
        initialMap.put("\u00F7", "&divide;");
        initialMap.put("\u00F7", "&div;");
        initialMap.put("\u22F2", "&disin;");
        initialMap.put("\u03DD", "&digamma;");
        initialMap.put("\u2146", "&DifferentialD;");
        initialMap.put("\u00A8", "&die;");
        initialMap.put("\u2666", "&diams;");
        initialMap.put("\u2666", "&diamondsuit;");
        initialMap.put("\u22C4", "&Diamond;");
        initialMap.put("\u22C4", "&diamond;");
        initialMap.put("\u22C4", "&diam;");
        initialMap.put("\u02DC", "&DiacriticalTilde;");
        initialMap.put("\u0060", "&DiacriticalGrave;");
        initialMap.put("\u02DD", "&DiacriticalDoubleAcute;");
        initialMap.put("\u02D9", "&DiacriticalDot;");
        initialMap.put("\u00B4", "&DiacriticalAcute;");
        initialMap.put("\u21C2", "&dharr;");
        initialMap.put("\u21C3", "&dharl;");
        initialMap.put("\u2965", "&dHar;");
        initialMap.put("\uD835\uDD21", "&dfr;");
        initialMap.put("\uD835\uDD07", "&Dfr;");
        initialMap.put("\u297F", "&dfisht;");
        initialMap.put("\u29B1", "&demptyv;");
        initialMap.put("\u03B4", "&delta;");
        initialMap.put("\u0394", "&Delta;");
        initialMap.put("\u2207", "&Del;");
        initialMap.put("\u00B0", "&deg");
        initialMap.put("\u00B0", "&deg;");
        initialMap.put("\u2A77", "&ddotseq;");
        initialMap.put("\u2911", "&DDotrahd;");
        initialMap.put("\u2146", "&dd;");
        initialMap.put("\u2145", "&DD;");
        initialMap.put("\u21CA", "&ddarr;");
        initialMap.put("\u2021", "&ddagger;");
        initialMap.put("\u0434", "&dcy;");
        initialMap.put("\u0414", "&Dcy;");
        initialMap.put("\u010F", "&dcaron;");
        initialMap.put("\u010E", "&Dcaron;");
        initialMap.put("\u02DD", "&dblac;");
        initialMap.put("\u290F", "&dbkarow;");
        initialMap.put("\u22A3", "&dashv;");
        initialMap.put("\u2AE4", "&Dashv;");
        initialMap.put("\u2010", "&dash;");
        initialMap.put("\u21D3", "&dArr;");
        initialMap.put("\u21A1", "&Darr;");
        initialMap.put("\u2193", "&darr;");
        initialMap.put("\u2138", "&daleth;");
        initialMap.put("\u2021", "&Dagger;");
        initialMap.put("\u2020", "&dagger;");
        initialMap.put("\u232D", "&cylcty;");
        initialMap.put("\u2231", "&cwint;");
        initialMap.put("\u2232", "&cwconint;");
        initialMap.put("\u22CF", "&cuwed;");
        initialMap.put("\u22CE", "&cuvee;");
        initialMap.put("\u21B7", "&curvearrowright;");
        initialMap.put("\u21B6", "&curvearrowleft;");
        initialMap.put("\u00A4", "&curren");
        initialMap.put("\u00A4", "&curren;");
        initialMap.put("\u22CF", "&curlywedge;");
        initialMap.put("\u22CE", "&curlyvee;");
        initialMap.put("\u22DF", "&curlyeqsucc;");
        initialMap.put("\u22DE", "&curlyeqprec;");
        initialMap.put("\u293C", "&curarrm;");
        initialMap.put("\u21B7", "&curarr;");
        initialMap.put("\u222A\uFE00", "&cups;");
        initialMap.put("\u2A45", "&cupor;");
        initialMap.put("\u228D", "&cupdot;");
        initialMap.put("\u2A4A", "&cupcup;");
        initialMap.put("\u22D3", "&Cup;");
        initialMap.put("\u222A", "&cup;");
        initialMap.put("\u224D", "&CupCap;");
        initialMap.put("\u2A46", "&cupcap;");
        initialMap.put("\u2A48", "&cupbrcap;");
        initialMap.put("\u293D", "&cularrp;");
        initialMap.put("\u21B6", "&cularr;");
        initialMap.put("\u22DF", "&cuesc;");
        initialMap.put("\u22DE", "&cuepr;");
        initialMap.put("\u2935", "&cudarrr;");
        initialMap.put("\u2938", "&cudarrl;");
        initialMap.put("\u22EF", "&ctdot;");
        initialMap.put("\u2AD2", "&csupe;");
        initialMap.put("\u2AD0", "&csup;");
        initialMap.put("\u2AD1", "&csube;");
        initialMap.put("\u2ACF", "&csub;");
        initialMap.put("\uD835\uDCB8", "&cscr;");
        initialMap.put("\uD835\uDC9E", "&Cscr;");
        initialMap.put("\u2A2F", "&Cross;");
        initialMap.put("\u2717", "&cross;");
        initialMap.put("\u21B5", "&crarr;");
        initialMap.put("\u2233", "&CounterClockwiseContourIntegral;");
        initialMap.put("\u2117", "&copysr;");
        initialMap.put("\u00A9", "&COPY");
        initialMap.put("\u00A9", "&COPY;");
        initialMap.put("\u00A9", "&copy");
        initialMap.put("\u00A9", "&copy;");
        initialMap.put("\u2210", "&Coproduct;");
        initialMap.put("\u2210", "&coprod;");
        initialMap.put("\u2102", "&Copf;");
        initialMap.put("\uD835\uDD54", "&copf;");
        initialMap.put("\u222E", "&ContourIntegral;");
        initialMap.put("\u222F", "&Conint;");
        initialMap.put("\u222E", "&conint;");
        initialMap.put("\u2261", "&Congruent;");
        initialMap.put("\u2A6D", "&congdot;");
        initialMap.put("\u2245", "&cong;");
        initialMap.put("\u2102", "&complexes;");
        initialMap.put("\u2201", "&complement;");
        initialMap.put("\u2218", "&compfn;");
        initialMap.put("\u2201", "&comp;");
        initialMap.put("\u0040", "&commat;");
        initialMap.put("\u002C", "&comma;");
        initialMap.put("\u2254", "&coloneq;");
        initialMap.put("\u2254", "&colone;");
        initialMap.put("\u2A74", "&Colone;");
        initialMap.put("\u2237", "&Colon;");
        initialMap.put("\u003A", "&colon;");
        initialMap.put("\u2663", "&clubsuit;");
        initialMap.put("\u2663", "&clubs;");
        initialMap.put("\u2019", "&CloseCurlyQuote;");
        initialMap.put("\u201D", "&CloseCurlyDoubleQuote;");
        initialMap.put("\u2232", "&ClockwiseContourIntegral;");
        initialMap.put("\u29C2", "&cirscir;");
        initialMap.put("\u2AEF", "&cirmid;");
        initialMap.put("\u2A10", "&cirfnint;");
        initialMap.put("\u2257", "&cire;");
        initialMap.put("\u29C3", "&cirE;");
        initialMap.put("\u25CB", "&cir;");
        initialMap.put("\u2297", "&CircleTimes;");
        initialMap.put("\u2295", "&CirclePlus;");
        initialMap.put("\u2296", "&CircleMinus;");
        initialMap.put("\u24C8", "&circledS;");
        initialMap.put("\u00AE", "&circledR;");
        initialMap.put("\u2299", "&CircleDot;");
        initialMap.put("\u229D", "&circleddash;");
        initialMap.put("\u229A", "&circledcirc;");
        initialMap.put("\u229B", "&circledast;");
        initialMap.put("\u21BB", "&circlearrowright;");
        initialMap.put("\u21BA", "&circlearrowleft;");
        initialMap.put("\u2257", "&circeq;");
        initialMap.put("\u02C6", "&circ;");
        initialMap.put("\u03C7", "&chi;");
        initialMap.put("\u03A7", "&Chi;");
        initialMap.put("\u2713", "&checkmark;");
        initialMap.put("\u2713", "&check;");
        initialMap.put("\u0447", "&chcy;");
        initialMap.put("\u0427", "&CHcy;");
        initialMap.put("\u212D", "&Cfr;");
        initialMap.put("\uD835\uDD20", "&cfr;");
        initialMap.put("\u00B7", "&CenterDot;");
        initialMap.put("\u00B7", "&centerdot;");
        initialMap.put("\u00A2", "&cent");
        initialMap.put("\u00A2", "&cent;");
        initialMap.put("\u29B2", "&cemptyv;");
        initialMap.put("\u00B8", "&Cedilla;");
        initialMap.put("\u00B8", "&cedil");
        initialMap.put("\u00B8", "&cedil;");
        initialMap.put("\u010B", "&cdot;");
        initialMap.put("\u010A", "&Cdot;");
        initialMap.put("\u2A50", "&ccupssm;");
        initialMap.put("\u2A4C", "&ccups;");
        initialMap.put("\u2230", "&Cconint;");
        initialMap.put("\u0109", "&ccirc;");
        initialMap.put("\u0108", "&Ccirc;");
        initialMap.put("\u00E7", "&ccedil");
        initialMap.put("\u00E7", "&ccedil;");
        initialMap.put("\u00C7", "&Ccedil");
        initialMap.put("\u00C7", "&Ccedil;");
        initialMap.put("\u010D", "&ccaron;");
        initialMap.put("\u010C", "&Ccaron;");
        initialMap.put("\u2A4D", "&ccaps;");
        initialMap.put("\u212D", "&Cayleys;");
        initialMap.put("\u02C7", "&caron;");
        initialMap.put("\u2041", "&caret;");
        initialMap.put("\u2229\uFE00", "&caps;");
        initialMap.put("\u2145", "&CapitalDifferentialD;");
        initialMap.put("\u2A40", "&capdot;");
        initialMap.put("\u2A47", "&capcup;");
        initialMap.put("\u22D2", "&Cap;");
        initialMap.put("\u2229", "&cap;");
        initialMap.put("\u2A4B", "&capcap;");
        initialMap.put("\u2A49", "&capbrcup;");
        initialMap.put("\u2A44", "&capand;");
        initialMap.put("\u0107", "&cacute;");
        initialMap.put("\u0106", "&Cacute;");
        initialMap.put("\u224F", "&bumpeq;");
        initialMap.put("\u224E", "&Bumpeq;");
        initialMap.put("\u224F", "&bumpe;");
        initialMap.put("\u2AAE", "&bumpE;");
        initialMap.put("\u224E", "&bump;");
        initialMap.put("\u2022", "&bullet;");
        initialMap.put("\u2022", "&bull;");
        initialMap.put("\u27C8", "&bsolhsub;");
        initialMap.put("\\", "&bsol;");
        initialMap.put("\u29C5", "&bsolb;");
        initialMap.put("\u22CD", "&bsime;");
        initialMap.put("\u223D", "&bsim;");
        initialMap.put("\u204F", "&bsemi;");
        initialMap.put("\u212C", "&Bscr;");
        initialMap.put("\uD835\uDCB7", "&bscr;");
        initialMap.put("\u00A6", "&brvbar");
        initialMap.put("\u00A6", "&brvbar;");
        initialMap.put("\u02D8", "&Breve;");
        initialMap.put("\u02D8", "&breve;");
        initialMap.put("\u2035", "&bprime;");
        initialMap.put("\u2560", "&boxVR;");
        initialMap.put("\u255F", "&boxVr;");
        initialMap.put("\u255E", "&boxvR;");
        initialMap.put("\u251C", "&boxvr;");
        initialMap.put("\u2563", "&boxVL;");
        initialMap.put("\u2562", "&boxVl;");
        initialMap.put("\u2561", "&boxvL;");
        initialMap.put("\u2524", "&boxvl;");
        initialMap.put("\u256C", "&boxVH;");
        initialMap.put("\u256B", "&boxVh;");
        initialMap.put("\u256A", "&boxvH;");
        initialMap.put("\u253C", "&boxvh;");
        initialMap.put("\u2551", "&boxV;");
        initialMap.put("\u2502", "&boxv;");
        initialMap.put("\u255A", "&boxUR;");
        initialMap.put("\u2559", "&boxUr;");
        initialMap.put("\u2558", "&boxuR;");
        initialMap.put("\u2514", "&boxur;");
        initialMap.put("\u255D", "&boxUL;");
        initialMap.put("\u255C", "&boxUl;");
        initialMap.put("\u255B", "&boxuL;");
        initialMap.put("\u2518", "&boxul;");
        initialMap.put("\u22A0", "&boxtimes;");
        initialMap.put("\u229E", "&boxplus;");
        initialMap.put("\u229F", "&boxminus;");
        initialMap.put("\u2569", "&boxHU;");
        initialMap.put("\u2568", "&boxhU;");
        initialMap.put("\u2567", "&boxHu;");
        initialMap.put("\u2534", "&boxhu;");
        initialMap.put("\u2566", "&boxHD;");
        initialMap.put("\u2565", "&boxhD;");
        initialMap.put("\u2564", "&boxHd;");
        initialMap.put("\u252C", "&boxhd;");
        initialMap.put("\u2550", "&boxH;");
        initialMap.put("\u2500", "&boxh;");
        initialMap.put("\u2554", "&boxDR;");
        initialMap.put("\u2553", "&boxDr;");
        initialMap.put("\u2552", "&boxdR;");
        initialMap.put("\u250C", "&boxdr;");
        initialMap.put("\u2557", "&boxDL;");
        initialMap.put("\u2556", "&boxDl;");
        initialMap.put("\u2555", "&boxdL;");
        initialMap.put("\u2510", "&boxdl;");
        initialMap.put("\u29C9", "&boxbox;");
        initialMap.put("\u22C8", "&bowtie;");
        initialMap.put("\u22A5", "&bottom;");
        initialMap.put("\u22A5", "&bot;");
        initialMap.put("\uD835\uDD53", "&bopf;");
        initialMap.put("\uD835\uDD39", "&Bopf;");
        initialMap.put("\u2310", "&bnot;");
        initialMap.put("\u2AED", "&bNot;");
        initialMap.put("\u2261\u20E5", "&bnequiv;");
        initialMap.put("\u003D\u20E5", "&bne;");
        initialMap.put("\u2588", "&block;");
        initialMap.put("\u2593", "&blk34;");
        initialMap.put("\u2591", "&blk14;");
        initialMap.put("\u2592", "&blk12;");
        initialMap.put("\u2423", "&blank;");
        initialMap.put("\u25B8", "&blacktriangleright;");
        initialMap.put("\u25C2", "&blacktriangleleft;");
        initialMap.put("\u25BE", "&blacktriangledown;");
        initialMap.put("\u25B4", "&blacktriangle;");
        initialMap.put("\u25AA", "&blacksquare;");
        initialMap.put("\u29EB", "&blacklozenge;");
        initialMap.put("\u290D", "&bkarow;");
        initialMap.put("\u22C0", "&bigwedge;");
        initialMap.put("\u22C1", "&bigvee;");
        initialMap.put("\u2A04", "&biguplus;");
        initialMap.put("\u25B3", "&bigtriangleup;");
        initialMap.put("\u25BD", "&bigtriangledown;");
        initialMap.put("\u2605", "&bigstar;");
        initialMap.put("\u2A06", "&bigsqcup;");
        initialMap.put("\u2A02", "&bigotimes;");
        initialMap.put("\u2A01", "&bigoplus;");
        initialMap.put("\u2A00", "&bigodot;");
        initialMap.put("\u22C3", "&bigcup;");
        initialMap.put("\u25EF", "&bigcirc;");
        initialMap.put("\u22C2", "&bigcap;");
        initialMap.put("\uD835\uDD1F", "&bfr;");
        initialMap.put("\uD835\uDD05", "&Bfr;");
        initialMap.put("\u226C", "&between;");
        initialMap.put("\u2136", "&beth;");
        initialMap.put("\u03B2", "&beta;");
        initialMap.put("\u0392", "&Beta;");
        initialMap.put("\u212C", "&Bernoullis;");
        initialMap.put("\u212C", "&bernou;");
        initialMap.put("\u03F6", "&bepsi;");
        initialMap.put("\u29B0", "&bemptyv;");
        initialMap.put("\u2235", "&Because;");
        initialMap.put("\u2235", "&because;");
        initialMap.put("\u2235", "&becaus;");
        initialMap.put("\u201E", "&bdquo;");
        initialMap.put("\u0431", "&bcy;");
        initialMap.put("\u0411", "&Bcy;");
        initialMap.put("\u224C", "&bcong;");
        initialMap.put("\u23B6", "&bbrktbrk;");
        initialMap.put("\u23B5", "&bbrk;");
        initialMap.put("\u2305", "&barwedge;");
        initialMap.put("\u2306", "&Barwed;");
        initialMap.put("\u2305", "&barwed;");
        initialMap.put("\u22BD", "&barvee;");
        initialMap.put("\u2AE7", "&Barv;");
        initialMap.put("\u2216", "&Backslash;");
        initialMap.put("\u22CD", "&backsimeq;");
        initialMap.put("\u223D", "&backsim;");
        initialMap.put("\u2035", "&backprime;");
        initialMap.put("\u03F6", "&backepsilon;");
        initialMap.put("\u224C", "&backcong;");
        initialMap.put("\u2A11", "&awint;");
        initialMap.put("\u2233", "&awconint;");
        initialMap.put("\u00E4", "&auml");
        initialMap.put("\u00E4", "&auml;");
        initialMap.put("\u00C4", "&Auml");
        initialMap.put("\u00C4", "&Auml;");
        initialMap.put("\u00E3", "&atilde");
        initialMap.put("\u00E3", "&atilde;");
        initialMap.put("\u00C3", "&Atilde");
        initialMap.put("\u00C3", "&Atilde;");
        initialMap.put("\u224D", "&asympeq;");
        initialMap.put("\u2248", "&asymp;");
        initialMap.put("\u002A", "&ast;");
        initialMap.put("\u2254", "&Assign;");
        initialMap.put("\uD835\uDCB6", "&ascr;");
        initialMap.put("\uD835\uDC9C", "&Ascr;");
        initialMap.put("\u00E5", "&aring");
        initialMap.put("\u00E5", "&aring;");
        initialMap.put("\u00C5", "&Aring");
        initialMap.put("\u00C5", "&Aring;");
        initialMap.put("\u224A", "&approxeq;");
        initialMap.put("\u2248", "&approx;");
        initialMap.put("\u2061", "&ApplyFunction;");
        initialMap.put("\u0027", "&apos;");
        initialMap.put("\u224B", "&apid;");
        initialMap.put("\u224A", "&ape;");
        initialMap.put("\u2A70", "&apE;");
        initialMap.put("\u2248", "&ap;");
        initialMap.put("\u2A6F", "&apacir;");
        initialMap.put("\uD835\uDD52", "&aopf;");
        initialMap.put("\uD835\uDD38", "&Aopf;");
        initialMap.put("\u0105", "&aogon;");
        initialMap.put("\u0104", "&Aogon;");
        initialMap.put("\u237C", "&angzarr;");
        initialMap.put("\u00C5", "&angst;");
        initialMap.put("\u2222", "&angsph;");
        initialMap.put("\u299D", "&angrtvbd;");
        initialMap.put("\u22BE", "&angrtvb;");
        initialMap.put("\u221F", "&angrt;");
        initialMap.put("\u2221", "&angmsd;");
        initialMap.put("\u29AF", "&angmsdah;");
        initialMap.put("\u29AE", "&angmsdag;");
        initialMap.put("\u29AD", "&angmsdaf;");
        initialMap.put("\u29AC", "&angmsdae;");
        initialMap.put("\u29AB", "&angmsdad;");
        initialMap.put("\u29AA", "&angmsdac;");
        initialMap.put("\u29A9", "&angmsdab;");
        initialMap.put("\u29A8", "&angmsdaa;");
        initialMap.put("\u2220", "&angle;");
        initialMap.put("\u29A4", "&ange;");
        initialMap.put("\u2220", "&ang;");
        initialMap.put("\u2A5A", "&andv;");
        initialMap.put("\u2A58", "&andslope;");
        initialMap.put("\u2A5C", "&andd;");
        initialMap.put("\u2227", "&and;");
        initialMap.put("\u2A53", "&And;");
        initialMap.put("\u2A55", "&andand;");
        initialMap.put("\u0026", "&AMP");
        initialMap.put("\u0026", "&AMP;");
        initialMap.put("\u0026", "&amp");
        initialMap.put("\u0026", "&amp;");
        initialMap.put("\u2A3F", "&amalg;");
        initialMap.put("\u0101", "&amacr;");
        initialMap.put("\u0100", "&Amacr;");
        initialMap.put("\u03B1", "&alpha;");
        initialMap.put("\u0391", "&Alpha;");
        initialMap.put("\u2135", "&aleph;");
        initialMap.put("\u2135", "&alefsym;");
        initialMap.put("\u00E0", "&agrave");
        initialMap.put("\u00E0", "&agrave;");
        initialMap.put("\u00C0", "&Agrave");
        initialMap.put("\u00C0", "&Agrave;");
        initialMap.put("\uD835\uDD1E", "&afr;");
        initialMap.put("\uD835\uDD04", "&Afr;");
        initialMap.put("\u2061", "&af;");
        initialMap.put("\u00E6", "&aelig");
        initialMap.put("\u00E6", "&aelig;");
        initialMap.put("\u00C6", "&AElig");
        initialMap.put("\u00C6", "&AElig;");
        initialMap.put("\u0430", "&acy;");
        initialMap.put("\u0410", "&Acy;");
        initialMap.put("\u00B4", "&acute");
        initialMap.put("\u00B4", "&acute;");
        initialMap.put("\u00E2", "&acirc");
        initialMap.put("\u00E2", "&acirc;");
        initialMap.put("\u00C2", "&Acirc");
        initialMap.put("\u00C2", "&Acirc;");
        initialMap.put("\u223E\u0333", "&acE;");
        initialMap.put("\u223F", "&acd;");
        initialMap.put("\u223E", "&ac;");
        initialMap.put("\u0103", "&abreve;");
        initialMap.put("\u0102", "&Abreve;");
        initialMap.put("\u00E1", "&aacute");
        initialMap.put("\u00E1", "&aacute;");
        initialMap.put("\u00C1", "&Aacute");
        initialMap.put("\u00C1", "&Aacute;");
        HTML50_EXTENDED_ESCAPE = Collections.unmodifiableMap(initialMap);
    }
    
    public static final Map<CharSequence, CharSequence> HTML50_EXTENDED_UNESCAPE;
    static {
        HTML50_EXTENDED_UNESCAPE = Collections.unmodifiableMap(EntityArrays.invert(HTML50_EXTENDED_ESCAPE));
}


}
